**************************************
社区共识重大升级
**************************************
1）改代码bug
2）改version/patches.go中的生效高度
3）大节点编译新版本后直接共识出块。
4）等到2）中的指定高度后自动升级到新的代码逻辑（也就是在这个高度后执行新逻辑， bug修复）
5）过了升级高度后， 小节点如果没有切换新版本，暂时不会共识失败， 一旦执行了"新逻辑所处的模块"，小节点就会崩溃，此时必须换新版本。
6）替换新版本后直接执行iris start也会提示失败， 需要执行iris start --replay-last-block来重启节点。

everything ok！

iriscli upgrade query-signals

条件：
1. 95%voting power升级了软件才会自动switch
2. c=current version , l=last_failure_version
   if c>=l then 可升级 c+1 version
   if c<l  then 可升级 L， L+1 version





======================================================================================================
最新测试升级的步骤
======================================================================================================


1. 初始化链，并不启动。 用 t 1  (注意autolanch 里注释掉unbonding time)
go run /Users/sherlock/go/src/github.com/irishub_auto/autotest-cmd/autoStart/lanchIris.go t 1

2. 修改genesis 把里面的upgrade的version改成0(现在可能要改成1 后面改成verison=2)
iris start --home=/Users/sherlock/testnet/v0/iris

3. 起链
4. 提交议题 到version 1

echo 1234567890 | iriscli gov submit-proposal --title=t --description=t --type="SoftwareUpgrade" --deposit=4000iris --from=v0 --chain-id=shilei-qa --fee=0.5iris --gas=20000 --software=https://github.com/irisnet/irishub/tree/v0.9.0 --version=1 --switch-height=160 --threshold=0.9 --commit

echo 1234567890 | iriscli gov vote --option=Yes --fee=0.04iris --from=v0 --chain-id=shilei-qa  --proposal-id=1 --commit

iriscli gov query-proposal --trust-node --proposal-id=1

iriscli upgrade info --trust-node //此时是v0


5.等到第160块 自动升级。 逻辑切换到v1

iriscli upgrade info --trust-node



======================================================================================================
reset & export
======================================================================================================

***********
reset：（单独reset仅仅用于数据坏了恢复一下）
***********
iris reset --height=100 --home=/Users/sherlock/testnet/v0/iris

1）height在最近100块之内：不删任何数据， start之后直接从最新块开始跑。 可以搭配export使用(就是reset到某一个高度然后export genesis出来)。
2）height超过前100块：
    此时已经没有任何数据，app数据只保留前100块，会直接到上一个tag点，以10000为间隔。
    reset会提示删除，APP状态到整数点，然后replay到指定高度。 （app数据会删掉(比如账户里面的钱)。 genesis里的状态，block数据不删掉，所以可以replay）
    start后会从指定高度在replay到最新高度（一步一步能计算出账户里面的钱）。
3）大于最新高度或者等于0，都是直接reset最新高度。

iris start --home=/Users/sherlock/testnet/v0/iris


***********
export：（导出genesis）
***********
导出当前区块链状态：只能看看， 没什么具体用处。 在当前目录导出genesis.json,里面有所有账户的信息
iris export --home=/Users/sherlock/testnet/v0/iris --output-file=/Users/sherlock/genesis.json

导出当前高度的区块链状态，并且以这个状态启动一条新链 （每次都要导出2个不同节点的genesis， 用goland看下是不是一致）
iris export --for-zero-height --home=/Users/sherlock/testnet/v0/iris --output-file=/Users/sherlock/genesis.json

必须配合 unsafe-reset-all  使用
iris unsafe-reset-all --home=/Users/sherlock/testnet/v0/iris

cp genesis.json /Users/sherlock/testnet/v0/iris/config
iris start --home=/Users/sherlock/testnet/v0/iris

