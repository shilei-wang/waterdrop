
distribution 崩溃


E[2020-05-14|18:08:00.886] CONSENSUS FAILURE!!!                         module=consensus err="Validator consensus-address csrbvalcons1uxkfanjqrrv5djxcsyjgg3yzrzh47z7lv7qrnd not found" stack="goroutine 163 [running]:\nruntime/debug.Stack(0xc0027f6188, 0x50871c0, 0xc000be6690)\n\t/usr/local/Cellar/go/1.13.6/libexec/src/runtime/debug/stack.go:24 +0x9d\ngithub.com/tendermint/tendermint/consensus.(*State).receiveRoutine.func2(0xc0000ad880, 0x548dd18)\n\t/Users/sherlock/go/pkg/mod/github.com/bianjieai/tendermint@v0.33.1-dev0.0.20200507075422-43fc9d850504/consensus/state.go:617 +0x57\npanic(0x50871c0, 0xc000be6690)\n\t/usr/local/Cellar/go/1.13.6/libexec/src/runtime/panic.go:679 +0x1b2\ngithub.com/cosmos/cosmos-sdk/x/slashing/keeper.Keeper.HandleValidatorSignature(0x5731840, 0xc000dcb210, 0x5768120, 0xc000d85350, 0x575dcc0, 0xc000d908f0, 0x574db80, 0xc000d15c70, 0x5747540, 0xc000042078, ...)\n\t/Users/sherlock/go/pkg/mod/github.com/bianjieai/cosmos-sdk@v0.38.2-0.20200508085623-d062defaa1d6/x/slashing/keeper/infractions.go:20 +0x1dd3\ngithub.com/cosmos/cosmos-sdk/x/slashing.BeginBlocker(0x5747540, 0xc000042078, 0x5763f20, 0xc002aedac0, 0xa, 0x0, 0x0, 0x0, 0x0, 0x0, ...)\n\t/Users/sherlock/go/pkg/mod/github.com/bianjieai/cosmos-sdk@v0.38.2-0.20200508085623-d062defaa1d6/x/slashing/abci.go:16 +0x17d\ngithub.com/cosmos/cosmos-sdk/x/slashing.AppModule.BeginBlock(...)\n\t/Users/sherlock/go/pkg/mod/github.com/bianjieai/cosmos-sdk@v0.38.2-0.20200508085623-d062defaa1d6/x/slashing/module.go:148\ngithub.com/cosmos/cosmos-sdk/types/module.(*Manager).BeginBlock(0xc0000fd5e0, 0x5747540, 0xc000042078, 0x5763f20, 0xc002aedac0, 0xa, 0x0, 0x0, 0x0, 0x0, ...)\n\t/Users/sherlock/go/pkg/mod/github.com/bianjieai/cosmos-sdk@v0.38.2-0.20200508085623-d062defaa1d6/types/module/module.go:301 +0x1ca\ncsrb/app.(*CsrbApp).BeginBlocker(...)\n\t/Users/sherlock/go/src/gitlab.bianjie.ai/csrb/app/app.go:408\ngithub.com/cosmos/cosmos-sdk/baseapp.(*BaseApp).BeginBlock(0xc000c98500, 0xc002c1c780, 0x20, 0x20, 0xa, 0x0, 0x0, 0x0, 0x0, 0x0, ...)\n\t/Users/sherlock/go/pkg/mod/github.com/bianjieai/cosmos-sdk@v0.38.2-0.20200508085623-d062defaa1d6/baseapp/abci.go:139 +0x4b4\ngithub.com/tendermint/tendermint/abci/client.(*localClient).BeginBlockSync(0xc00018cea0, 0xc002c1c780, 0x20, 0x20, 0xa, 0x0, 0x0, 0x0, 0x0, 0x0, ...)\n\t/Users/sherlock/go/pkg/mod/github.com/bianjieai/tendermint@v0.33.1-dev0.0.20200507075422-43fc9d850504/abci/client/local_client.go:231 +0x101\ngithub.com/tendermint/tendermint/proxy.(*appConnConsensus).BeginBlockSync(0xc00013b950, 0xc002c1c780, 0x20, 0x20, 0xa, 0x0, 0x0, 0x0, 0x0, 0x0, ...)\n\t/Users/sherlock/go/pkg/mod/github.com/bianjieai/tendermint@v0.33.1-dev0.0.20200507075422-43fc9d850504/proxy/app_conn.go:69 +0x6b\ngithub.com/tendermint/tendermint/state.execBlockOnProxyApp(0x5748140, 0xc000d1a760, 0x575a420, 0xc00013b950, 0xc000455500, 0x57673a0, 0xc0004a9858, 0x6, 0xc0000438c0, 0x9)\n\t/Users/sherlock/go/pkg/mod/github.com/bianjieai/tendermint@v0.33.1-dev0.0.20200507075422-43fc9d850504/state/execution.go:284 +0x3e1\ngithub.com/tendermint/tendermint/state.(*BlockExecutor).ApplyBlock(0xc000100230, 0xa, 0x0, 0xc0000438b0, 0x6, 0xc0000438c0, 0x9, 0x5, 0xc002a57c40, 0x20, ...)\n\t/Users/sherlock/go/pkg/mod/github.com/bianjieai/tendermint@v0.33.1-dev0.0.20200507075422-43fc9d850504/state/execution.go:135 +0x17a\ngithub.com/tendermint/tendermint/consensus.(*State).finalizeCommit(0xc0000ad880, 0x6)\n\t/Users/sherlock/go/pkg/mod/github.com/bianjieai/tendermint@v0.33.1-dev0.0.20200507075422-43fc9d850504/consensus/state.go:1459 +0x8f5\ngithub.com/tendermint/tendermint/consensus.(*State).tryFinalizeCommit(0xc0000ad880, 0x6)\n\t/Users/sherlock/go/pkg/mod/github.com/bianjieai/tendermint@v0.33.1-dev0.0.20200507075422-43fc9d850504/consensus/state.go:1377 +0x383\ngithub.com/tendermint/tendermint/consensus.(*State).enterCommit.func1(0xc0000ad880, 0x0, 0x6)\n\t/Users/sherlock/go/pkg/mod/github.com/bianjieai/tendermint@v0.33.1-dev0.0.20200507075422-43fc9d850504/consensus/state.go:1312 +0x90\ngithub.com/tendermint/tendermint/consensus.(*State).enterCommit(0xc0000ad880, 0x6, 0x0)\n\t/Users/sherlock/go/pkg/mod/github.com/bianjieai/tendermint@v0.33.1-dev0.0.20200507075422-43fc9d850504/consensus/state.go:1349 +0x61a\ngithub.com/tendermint/tendermint/consensus.(*State).addVote(0xc0000ad880, 0xc002ae6e60, 0xc000d658f0, 0x28, 0x0, 0x8, 0xc0027fda38)\n\t/Users/sherlock/go/pkg/mod/github.com/bianjieai/tendermint@v0.33.1-dev0.0.20200507075422-43fc9d850504/consensus/state.go:1891 +0xa39\ngithub.com/tendermint/tendermint/consensus.(*State).tryAddVote(0xc0000ad880, 0xc002ae6e60, 0xc000d658f0, 0x28, 0x90409c9ad64f0f80, 0x107, 0xff)\n\t/Users/sherlock/go/pkg/mod/github.com/bianjieai/tendermint@v0.33.1-dev0.0.20200507075422-43fc9d850504/consensus/state.go:1707 +0x67\ngithub.com/tendermint/tendermint/consensus.(*State).handleMsg(0xc0000ad880, 0x571b340, 0xc00018a800, 0xc000d658f0, 0x28)\n\t/Users/sherlock/go/pkg/mod/github.com/bianjieai/tendermint@v0.33.1-dev0.0.20200507075422-43fc9d850504/consensus/state.go:713 +0x252\ngithub.com/tendermint/tendermint/consensus.(*State).receiveRoutine(0xc0000ad880, 0x0)\n\t/Users/sherlock/go/pkg/mod/github.com/bianjieai/tendermint@v0.33.1-dev0.0.20200507075422-43fc9d850504/consensus/state.go:648 +0x6eb\ncreated by github.com/tendermint/tendermint/consensus.(*State).OnStart\n\t/Users/sherlock/go/pkg/mod/github.com/bianjieai/tendermint@v0.33.1-dev0.0.20200507075422-43fc9d850504/consensus/state.go:335 +0x13a\n"
E[2020-05-14|18:09:19.091] Stopping peer for error                      module=p2p peer="Peer{MConn{[::1]:59878} ee8f917f0dc78cf28a7b54d395a279902cc73b1b in}" err=EOF
^CE[2020-05-14|18:09:21.884] Not stopping BlockPool service -- has not been started yet module=blockchain impl=BlockPool
I[2020-05-14|18:09:21.884] exiting...
scsrb


================================================================================================================
================================================================================================================
scsrb

1）在一定步骤下 query request 产生空的冗余错误数据。

2）csrbcli query service request-context --trust-node 112328BF9F3494BD575AB5B69C94A7584C215F9ADDD37CEDCEECEE91FBB9627F0000000000000000
查询panic， 但是json模式可以正常查询 （最新代码已提交修复，后续再验证）

3）代码里还有点gaia的残留
Use "gaiacli query [command] --help" for more information about a command.

4）csrbcli query bank total 和 csrbcli query token tokens  返回的结果中， point数量不一致。

5)csrbcli query service binding --trust-node a001 $(csrbcli keys show v0 --address) -o=json --indent
json格式中price 有冗余的 "\"符号。 非 json 模式显示正常。 （同样的问题 csrbcli query service request -o=json  中的input也有）

6）service requests 返回的id未转码、
 csrbcli query service requests --trust-node 91F5E25198E6E9721E0A6131C5DB2FCDE4C0893759884C22C108352B99423A390000000000000000 1
- id:
  - 145
  - 245
  - 226
  - 81
  - 152


================================================================================================================
================================================================================================================
================================================================================================================
================================================================================================================
irita LCD nft  目前存在的问题： 【这些lcd 有时间再验证】
1. GET   /nft/nfts/collections/{denom}
  get方法连续性查询会出现  "error": "invalid request: failed to load state at height 249; version does not exist (latest height: 250)"
  必须重启 rest客户端 才能恢复。

2. Get 方法如果输入留空， 执行后， swagger会假死。

5） update context 的时候， service_fee_cap 的demon 设置一个不存在的token （比如iris），会出现如下bug：
   1。交易可以发送成功，
   2。后续request状态会异常， 查询context的时候出现无法解析的空数据。

6） LCD POST /service/fees/{provider}/withdraw  这个接口未正确迁移irita， 返回404


================================================================================================================
================================================================================================================
================================================================================================================
================================================================================================================




================================================================================================================
================================================================================================================
================================================================================================================
================================================================================================================
已经修复， 后续删除！
================================================================================================================
================================================================================================================
================================================================================================================
================================================================================================================

csrbcli tx service define --chain-id=shilei-qa --from=v0 --description=service-description --author-description=author-description --tags=tag1,tag2 --schemas=/Users/sherlock/my_workspace/service/schemas.json --name=a001 --fees=4point -b block -y

csrbcli tx send v0 csrb1lcuw6ewd2gfxap37sejewmta205sgssm7rvda5 50000point --chain-id=shilei-qa --fees=4point -b block -y
csrbcli query bank balances --trust-node csrb1lcuw6ewd2gfxap37sejewmta205sgssm7rvda5


csrbcli tx service bind --chain-id=shilei-qa --fees=4point -b block -y --from=v0 --deposit=20000point --pricing=/Users/sherlock/my_workspace/service/pricing.json --service-name=a001 --qos=5

csrbcli tx service bind --chain-id=shilei-qa --fees=4point -b block -y --from=v1 --deposit=20000point --pricing=/Users/sherlock/my_workspace/service/pricing.json --service-name=a001 --qos=5


csrbcli tx service set-withdraw-addr --chain-id=shilei-qa --from=v0 --fees=4point -b block -y csrb185d9dvu6sdc6yvxxf9cx5jl4g9yvpmn5pmq48g


csrbcli tx service call --chain-id=shilei-qa --from=v0 --fees=4point -b block -y --service-name=a001 --service-fee-cap=1point --data="{\"id\": \"1234\",\"name\": \"bianjie\",\"data\": \"facedata\"}" --providers=$(csrbcli keys show v0 --address) --timeout=20 --repeated --frequency=20 --total=-1


csrbcli tx service respond --chain-id=shilei-qa --from=v0  --fees=4point -b block -y  --data="{\"data\": \"userdata\"}" --result='{"code":200,"message":"it500"}' --request-id=$(csrbcli query service requests --trust-node  a001 $(csrbcli keys show v0 --address) -o=json | jq -r .[0].id)


csrbcli query service fees --trust-node $(csrbcli keys show v0 --address)


csrbcli tx service call --chain-id=shilei-qa --from=v1 --fees=4point -b block -y --service-name=a001 --service-fee-cap=1point --data="{\"id\": \"1234\",\"name\": \"bianjie\",\"data\": \"facedata\"}" --providers=$(csrbcli keys show v1 --address) --timeout=20 --repeated --frequency=20 --total=-1


csrbcli tx service respond --chain-id=shilei-qa --from=v1  --fees=4point -b block -y  --data="{\"data\": \"userdata\"}" --result='{"code":200,"message":"it500"}' --request-id=$(csrbcli query service requests --trust-node  a001 $(csrbcli keys show v1 --address) -o=json | jq -r .[0].id)


csrbcli query service fees --trust-node $(csrbcli keys show v1 --address)


// 这步应该提示出错！
csrbcli tx service withdraw-fees $(csrbcli keys show v0 --address) --chain-id=shilei-qa --from=v1 --fees=4point -b block -y


csrbcli query bank balances --trust-node csrb185d9dvu6sdc6yvxxf9cx5jl4g9yvpmn5pmq48g