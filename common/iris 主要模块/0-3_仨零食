




================================================================================================================
================================================================================================================
================================================================================================================
================================================================================================================



iritacli service 加入owner重构的测试结果：

1）特定地址的provider ，会导致该provider的绑定信息不可查询
eg： iaa1yavyuxsmmevej6zfgznmdzrhqzgcfjh44mh97g
iritacli query service bindings a001 --owner=iaa1yavyuxsmmevej6zfgznmdzrhqzgcfjh44mh97g
查询逻辑错误

2）iritacli query service fees 查询不可用， 返回错误。

3）iritacli query service request-context ，查询一个被kill掉的 request-context ，返回panic
以前报过一个类似的bug也未修复：
query service response 查询"过期"的respond信息， 返回Panic






================================================================================================================
================================================================================================================
================================================================================================================
================================================================================================================

irita-ent 最新 issue的补充：

缺陷：

1. service requests 查询（在一定的步骤下）会产生冗余的空数据。

2. query service response 查询"过期"的respond信息， 返回Panic

3. service_fee_tax 收取tax时，在乘以1%后（金额小于1个基本单位），应该最少收1个point的基本单位。（目前是收取0point）有待商榷

4. irita testnet 不指定默认--output-dir 会导致genesis生成出错， 启动链后会报panic


修改建议：

1. irita 目前还不支持新的token用小数转账。
2. 目前也不支持burn。


================================================================================================================
================================================================================================================
================================================================================================================
================================================================================================================
irita LCD nft  目前存在的问题：
1. GET   /nft/nfts/collections/{denom}
  get方法连续性查询会出现  "error": "invalid request: failed to load state at height 249; version does not exist (latest height: 250)"
  必须重启 rest客户端 才能恢复。

2. Get 方法如果输入留空， 执行后， swagger会假死。


irita service 目前存在的问题：
1. iriscli service schema pricing ，iritacli query service schema result
返回未格式化， 存在大量 \n\t\t

2. bind时 deposit 最少 10000000000stake ，这个后续需要改

3. --generate-only 不可用

4. service call  不可用

  iritacli query service params

================================================================================================================
================================================================================================================
================================================================================================================
================================================================================================================

irita service 最新 issue的补充：

1） query 一个不存在的 request-context 会返回panic
iritacli query service request-context C2FFBF8A2018050B49FFC607688942442127A9BF78BEA91B0B40A5D90596D5A30000000000000000

2） iritacli query service requests a001 $(iritacli keys show v0 --address)
    返回的id，编码不正确。 （目前看来 只有-o=json，才返回正确的面板）

3） LCD中， 很多的example 还是沿用stake和iris， 不是 point。

4） cli 查询context 返回的state没有转换为可读字段。
    目前cli端显示 0，1  。
    lcd端显示 running ， paused

5） update context 的时候， service_fee_cap 的demon 设置一个不存在的token （比如iris），会出现如下bug：
   1。交易可以发送成功，
   2。后续request状态会异常， 查询context的时候出现无法解析的空数据。

6） LCD POST /service/fees/{provider}/withdraw  这个接口未正确迁移irita， 返回404

================================================================================================================
================================================================================================================
================================================================================================================
================================================================================================================


iritacli tx service define --chain-id=shilei-qa --from=v0 --description=service-description --author-description=author-description --tags=tag1,tag2 --schemas=/Users/sherlock/my_workspace/service/schemas.json --name=a001 --fees=4point -b block -y

iritacli tx service bind --chain-id=shilei-qa --fees=4point -b block -y --from=v0 --deposit=20000point --min-resp-time=5 --pricing=/Users/sherlock/my_workspace/service/pricing.json --service-name=a001

iritacli tx service call --chain-id=shilei-qa --from=v0 --fees=4point -b block -y --service-name=a001 --service-fee-cap=1point --data="{\"id\": \"1234\",\"name\": \"bianjie\",\"data\": \"facedata\"}" --providers=$(iritacli keys show v0 --address) --timeout=20 --repeated --frequency=20 --total=-1

---

iritacli query service request-context 894085D5E3F11ADA936BDBEB391EE114872F21415A39A452098B5A9F8D60C13E0000000000000000


iritacli tx service update --chain-id=shilei-qa --from=v0 --fees=4point -b block -y  --timeout=22 --frequency=22 --total=3000 981931430F58119FE18A1E755873FC264112CC7160A4E0403D6F6DC7E9140D610000000000000000


iritacli tx service respond --chain-id=shilei-qa --from=v0  --fees=4point -b block -y  --data="{\"data\": \"userdata\"}" --result='{"code":200,"message":"it500"}' --request-id=$(iritacli query service requests a001 $(iritacli keys show v0 --address) -o=json | jq -r .[0].id)

iritacli tx service pause --chain-id=shilei-qa --from=v0  --fees=4point -b block -y 981931430F58119FE18A1E755873FC264112CC7160A4E0403D6F6DC7E9140D610000000000000000

 iritacli tx service start --chain-id=shilei-qa --from=v0 --fees=4point -b block -y 981931430F58119FE18A1E755873FC264112CC7160A4E0403D6F6DC7E9140D610000000000000000

iritacli tx service respond --chain-id=shilei-qa --from=v0  --fees=4point -b block -y  --data="{\"data\": \"userdata\"}" --result='{"code":200,"message":"it500"}' --request-id=$(iritacli query service requests a001 $(iritacli keys show v0 --address) -o=json | jq -r .[0].id)


iritacli query service requests a001 $(iritacli keys show v0 --address) -o=json --indent


iritacli query service requests a001 iaa1gq99yxv5sfw4gepzys3hc899lte4gzywpctza5
