
=============================================
feature 1： record submit
=============================================

1)【功能验证】 验证"submit"功能是否正确
【执行命令】 iriscli record submit --chain-id=shilei-qa --description="good" --onchain-data="shelwin flighting1" --from=v1 --fee=0.004iris
【期望结果】 提交存证成功，并正确返回 "tx hash","action", "ConsumedTxFee", "ownerAddress", "record-id"
【测试结果】 Fail
【Normal Bug001】 ConsumedTxFee 返回值不可读,没有对编码进行转义。例如："FW\u001f:\u0018\u0000"

2)【反向测试】 验证"输入的chain-id"值和实际chain-id不符的情况下，程序是否能返回正确的error提示。
【执行命令】 iriscli record submit --chain-id=shilei --description="good" --onchain-data="shelwin flighting" --from=v1 --fee=0.004iris
【期望结果】 程序能给出正确的错误提示。
【测试结果】 Pass

3) 【反向测试】 验证"--onchain-data"值为空的情况下，程序是否能返回正确的error提示。
【执行命令】 iriscli record submit --chain-id=shilei --description="good" --onchain-data="shelwin flighting2" --from=v1 --fee=0.004iris
【期望结果】 程序能给出正确的错误提示。
【测试结果】 Pass

4) 【反向测试】 验证"输入的description"值为空的情况下，程序是否能返回正确的error提示。
【执行命令】 iriscli record submit --chain-id=shilei-qa --description="" --onchain-data="shelwin flighting3" --from=v1 --fee=0.004iris
【期望结果】 程序能给出正确的错误提示。
【测试结果】 Pass

5) 【反向测试】 验证2次"输入重复的onchain-data"的情况下，程序是否能返回正确的error提示。
【执行命令】 iriscli record submit --chain-id=shilei-qa --description="&$" --onchain-data="shelwin flighting4" --from=v1 --fee=0.004iris
                (备注：连续2次执行该命令)
【期望结果】 第二次submit不能正常提交， 程序能给出正确的错误提示。
【测试结果】 PASS
【Improvement】 The description of error message is incorrect .  when we try to interpret the sentence "id已经存在"， we use "ID already exists" instead of "ID is already existed" (Syntax error, same problem is found in "query" feature, the error message in "download" feature is correct)

6) 【反向测试】 验证"输入的--onchain-data"值为特殊字符的情况下，submit是否能正常提交。 （测试数据： ~ @#￥%&*‘\n）
【执行命令】 iriscli record submit --chain-id=shilei-qa --description="good" --onchain-data="$%" --from=v1 --fee=0.004iris
【期望结果】 submit可以正常提交， 可以通过query的请求来验证特殊字符是否能正确写入区块链。
【测试结果】 Pass

7) 【反向测试】 验证"输入的description"值为特殊字符的情况下，submit是否能正常提交。 （测试数据： ~ @#￥%&*‘\n）
【执行命令】 iriscli record submit --chain-id=shilei-qa --description="&$" --onchain-data="shelwin flighting5" --from=v1 --fee=0.004iris
【期望结果】 submit可以正常提交， 可以通过query的请求来验证特殊字符是否能正确写入区块链。
【测试结果】 Pass

8) 【边界测试】 验证"输入的--onchain-data"是否对输入长度进行限制， 如果超过长度是否会有正确的error提示
【执行命令】 iriscli record submit --chain-id=shilei-qa --description="Good" --onchain-data=【输入明显较长长度的字符串,例如10000字节长度】 --from=v1 --fee=0.004iris
【期望结果】 应该有长度限制提示。 （对由于没有明确的spec说明，此处期望结果根据现实经验给出期望结果，后续有了明确的spec后会做修改。）
【测试结果】 Pass （程序提示onchain-data上传数据size最大为1024字节）

9) 【边界测试】 验证"输入的--onchain-data"长度进行边界测试，输入测试参数的长度分别为: 1个字节 1023字节 1024字节 1025字节
【执行命令】 iriscli record submit --chain-id=shilei-qa --description="Good" --onchain-data=【输入上述测试参数分别测试】 --from=v1 --fee=0.004iris
【期望结果】 onchain-data长度为 [1023字节] [1024字节] submit可以正常提交，onchain-data长度为 [1025字节] 时提示超出长度。
【测试结果】 Fail
【Normal Bug002】 程序提示上传数据size最大为1024字节， 实际测试结果： 1023字节长度的字符串可以上传， 1024字节长度的字符串不能上传，1025字节长度的字符串不能上传. 与期望结果不符。

10) 【边界测试】 验证"输入的description"是否对输入长度进行限制， 如果超过长度是否会有正确的error提示
【执行命令】 iriscli record submit --chain-id=shilei-qa --description=【输入明显较长长度的字符串,例如10000字节长度】 --onchain-data"shelwin flighting6" --from=v1 --fee=0.004iris
【期望结果】 应该有长度限制提示。 （对由于没有明确的spec说明，此处期望结果根据现实经验给出期望结果，后续有了明确的spec后会做修改。）
【测试结果】 Fail
【Improvement】 description值，无长度限制提示
