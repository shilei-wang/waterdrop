cd /Users/sherlock/go/src/github.com/irishub
git fetch --all
git checkout .
git checkout -b vincent-pre-release upstream/vincent-pre-release  //git checkout v1.0.0-refactor // git checkout master
git pull
git branch && git rev-parse HEAD


//只有主网版本 没有setTestEnv.sh
make install


//go mod tidy
//iris version


====================
autoStart
====================

autoStart c 1

autoStart c 2
iris query bank balances $(iris keys show v0 -a) |jq
iris query bank balances $(iris keys show v1 -a) |jq


-------------

rm -rf /Users/sherlock/.iriscli /Users/sherlock/.iris /Users/sherlock/testnet
iris testnet --v=1 --output-dir=/Users/sherlock/testnet  --node-dir-prefix=v --starting-ip-address=127.0.0.1 --chain-id=shilei-qa
sed -i '' 's/"172800000000000"/"20000000000"/g' /Users/sherlock/testnet/v0/iris/config/genesis.json
sed -i '' 's/"1814400000000000"/"20000000000"/g' /Users/sherlock/testnet/v0/iris/config/genesis.json
sed -i '' 's/"500000000"/"50000000000000"/g' /Users/sherlock/testnet/v0/iris/config/genesis.json
iris start --home=/Users/sherlock/testnet/v0/iris

所有交易后面可以加  |jq 看返回


====================
rest
====================
先暂停链
sed -i '' 's/swagger = false/swagger = true/g' /Users/sherlock/testnet/v0/iris/config/app.toml
iris start --home=/Users/sherlock/testnet/v0/iris


http://0.0.0.0:1317/
http://localhost:1317/swagger-ui/

====================
用init自己起（注意这里要用uiris）
====================
rm -rf /Users/sherlock/.iriscli /Users/sherlock/.iris /Users/sherlock/testnet
iris init --home=/Users/sherlock/testnet/v0/iris --chain-id=shilei-qa v0
iris add-genesis-account $(iris keys show v0 --address) 100000000000000uiris --home=/Users/sherlock/testnet/v0/iris
iris gentx --home=/Users/sherlock/testnet/v0/iris --chain-id=shilei-qa v0
iris collect-gentxs --home=/Users/sherlock/testnet/v0/iris
iris start --home=/Users/sherlock/testnet/v0/iris
// 默认



====================
基础操作
====================
iris keys show v0
iris tx bank send v0 $(iris keys show v0 -a) 1iris --fees=4iris --chain-id=shilei-qa -b block -y |jq
iris query bank balances -o=json $(iris keys show v0 -a) |jq



====================
token
====================
发行资产：
echo y| iris tx token issue --name=token-name --min-unit="mu01" --scale=9 --initial-supply=10000 --max-supply=30000 --mintable=true --from=v0 --chain-id=shilei-qa --fees=4iris -b block -y  --symbol=a01 |jq

iris tx bank send v0 $(iris keys show v0 -a) 1mu01 --fees=4iris --chain-id=shilei-qa -b block -y |jq

查询资产：
iris query token tokens -o=json $(iris keys show v0 -a) |jq
iris query token token -o=json a01 |jq
iris query token tokens -o=json  |jq


修改资产：
iris tx token edit a01 --name="Cat" --max-supply=99999 --mintable=true --from=v0 --chain-id=shilei-qa --fees=4iris -b block -y |jq
iris query token token -o=json a01 |jq

增发资产：
echo y| iris tx token mint a01 --amount=1 --to=iaa1pm432kqz62mutq439ynqs87u30r36062qdw977 --from=v0 --chain-id=shilei-qa --fees=4iris -b block -y
iris query bank balances -o=json iaa1pm432kqz62mutq439ynqs87u30r36062qdw977 |jq


转让asset：
iris tx token transfer a01 --to=iaa1pm432kqz62mutq439ynqs87u30r36062qdw977 --from=v0 --chain-id=shilei-qa --fees=4iris -b block -y
iris query token tokens -o=json iaa1pm432kqz62mutq439ynqs87u30r36062qdw977 |jq


查询fee：
iris query token fee -o=json a01 |jq

====================
NFT
====================
issue：
iris tx nft issue d01 --from=v0 --chain-id=shilei-qa --fees=4iris -b block -y

mint:
iris tx nft mint d01 a01 --recipient=$(iris keys show v0 --address) --name="name" --uri="tokenURI" --data="tokenData" --from=v0 --chain-id=shilei-qa --fees=4iris -b block -y

查询：
iris query nft supply -o=json d01 |jq
iris query nft owner -o=json $(iris keys show v0 --address) |jq
iris query nft collection -o=json d01 |jq
iris query nft denoms -o=json |jq
iris query nft token -o=json d01 a01 |jq


edit（必须要用owner）：
iris tx nft edit d01 a01 --name="name2" --uri="tokenURI2" --from=v0 --chain-id=shilei-qa --fees=4iris -b block -y

transfer：
iris tx nft transfer iaa1pkhw2svp2m7fd3mstpylfk48rrlal8sdmv3kqc d01 a01 --from=v0 --chain-id=shilei-qa --fees=4iris -b block -y

burn：
iris tx nft mint d01 a02 --recipient=$(iris keys show v0 --address) --uri="tokenURI" --data="tokenData" --from=v0 --chain-id=shilei-qa --fees=4iris -b block -y

iris tx nft burn d01 a02 --from=v0 --chain-id=shilei-qa --fees=4iris -b block -y


======================
     htlc
======================
//注意：因为本链 所以other-chain这个暂时00
//secret不填的话自动生成
iris tx htlc create --to=iaa1pm432kqz62mutq439ynqs87u30r36062qdw977  --amount=1iris --time-lock=50 --timestamp=1580000000 --receiver-on-other-chain=00 --from=v0 --chain-id=shilei-qa --fees=4iris -b block -y

//也可以填
iris tx htlc create --to=iaa1pm432kqz62mutq439ynqs87u30r36062qdw977  --amount=1iris --time-lock=50 --timestamp=1580000000 --receiver-on-other-chain=00 --secret=b5e03cf9be4b77ca253d941467fe1664688403c666fc92317415b9513ad7340e --from=v0 --chain-id=shilei-qa --fees=4iris -b block -y

返回:
Secret:      7b2d32b3b73560ef535e9a35ba7dd5cf5f4dbcd9bd7d24ce44a939c60148cb7b
HashLock:    0431fceea34d994ad1987ec6ca835a34f19d0e69816ef4dcd47fcb531bf578ea

查询  query-htlc 【HashLock】
iris query htlc htlc 3f0d93550229f9f1c97c04a0f3a63751c8ae707190729519ce65fe0b76716b7a -o=json |jq

声明所有 claim 【HashLock ， secret】
iris tx htlc claim 0431fceea34d994ad1987ec6ca835a34f19d0e69816ef4dcd47fcb531bf578ea 7b2d32b3b73560ef535e9a35ba7dd5cf5f4dbcd9bd7d24ce44a939c60148cb7b  --from=v0 --chain-id=shilei-qa --fees=4iris -b block -y |jq

取回过期  htlc refund
iris tx htlc refund 3f0d93550229f9f1c97c04a0f3a63751c8ae707190729519ce65fe0b76716b7a --from=v0 --chain-id=shilei-qa --fees=4iris -b block -y



======================
     guardian
======================

===
iris tx guardian -h
===
修改genesis 复制里面v0， iaa地址 【目前这个不用做了， 保存以备后续】
subl /Users/sherlock/testnet/v0/iris/config/genesis.json

[{"description":"test","account_type":0,"address":"iaa1xxmxr09qvyqp5gkvlnlfq6wycde0kgncrvy687","added_by":"iaa1xxmxr09qvyqp5gkvlnlfq6wycde0kgncrvy687"}]


1.获取所有profiler账号列表
iris query guardian profilers -o=json |jq

2.获取所有trustee账号列表 （取回tax的账户）
iris query guardian trustees -o=json |jq

3.添加profiler账号 [注意 :只有genesis账号才可以拥有添加删除用户功能 ]
iris tx guardian add-profiler --address=iaa1lcuw6ewd2gfxap37sejewmta205sgssm5m0tjp --description=v0 --from=v0 --chain-id=shilei-qa --fees=4iris -b block -y

4.添加trustee账号
iris tx guardian add-trustee --address=iaa1lcuw6ewd2gfxap37sejewmta205sgssm5m0tjp --description=v --from=v0 --chain-id=shilei-qa --fees=4iris -b block -y

5.删除profiler账号
iris tx guardian delete-profiler --address=iaa1lcuw6ewd2gfxap37sejewmta205sgssm5m0tjp --from=v0 --chain-id=shilei-qa --fees=4iris -b block -y

6.删除trustee账号
iris tx guardian delete-trustee --address=iaa1lcuw6ewd2gfxap37sejewmta205sgssm5m0tjp --from=v0 --chain-id=shilei-qa --fees=4iris -b block -y




======================================================================================================
     service
======================================================================================================

===================
    定义
===================
1. 服务定义
iris tx service define --chain-id=shilei-qa --from=v0 --description=service-description --author-description=author-description --tags=tag1,tag2 --schemas=/Users/sherlock/my_workspace/service/schemas.json --name=a001 --fees=4iris -b block -y

2. 服务定义查询 （可以查询 method id）
iris query service definition -o=json a001 |jq

3. 查询 schema
iris query service schema pricing -o=json |jq
iris query service schema result -o=json |jq

===================
    绑定
===================
1. 服务绑定
//owner是v0， provider也是v0
iris tx service bind --chain-id=shilei-qa --fees=4iris -b block -y --from=v0 --deposit=20000iris --pricing=/Users/sherlock/my_workspace/service/pricing_1.0.json --service-name=a001 --qos=5

//owner是v0， provider也是v1
iris tx service bind --chain-id=shilei-qa --fees=4iris --provider=$(iris keys show v1 --address) -b block -y --from=v0 --deposit=20000iris --pricing=/Users/sherlock/my_workspace/service/pricing_1.0.json --service-name=a001 --qos=5

2. 查询服务绑定
iris query service binding  -o=json a001 $(iris keys show v0 --address) |jq
iris query service bindings -o=json a001 |jq

//过滤a001服务下 ， owner是v0的所有provider绑定信息
iris query service bindings -o=json a001 --owner=$(iris keys show v0 --address) |jq

3. 更新绑定 --min-resp-time（qos）也可以改
iris tx service update-binding a001 $(iris keys show v0 --address) --chain-id=shilei-qa --from=v0 --fees=4iris -b block -y --deposit=2iris --qos=6

4. 设置提取地址 （所有的provider只能通过owner的地址提取）
iris tx service set-withdraw-addr --chain-id=shilei-qa --from=v0 --fees=4iris -b block -y iaa1pm432kqz62mutq439ynqs87u30r36062qdw977

//查询提取地址
iris query service withdraw-addr $(iris keys show v0 --address)

7.服务失效
iris tx service disable a001 $(iris keys show v0 --address) --chain-id=shilei-qa --from=v0 --fees=4iris -b block -y

8.服务恢复 ，可以增加抵押
iris tx service enable a001 $(iris keys show v0 --address) --chain-id=shilei-qa --from=v0 --fees=4iris -b block -y --deposit=1iris

9. 取回抵押 (滞后 COMPLAINT_RETROSPECT (Gov) + ARBITRATION_TIMELIMIT (Gov)) 、、这个还没有测
iris tx service refund-deposit a001 --chain-id=shilei-qa --from=v0 --fees=4iris -b block -y


===================
    调用
===================
1. 服务调用
1）批量请求
//单个
iris tx service call --chain-id=shilei-qa --from=v0 --fees=4iris -b block -y --service-name=a001  --timeout=20 --service-fee-cap=1uiris --data="{\"id\": \"1234\",\"name\": \"bianjie\",\"data\": \"facedata\"}" --providers=$(iris keys show v0 --address) |jq

//重复
iris tx service call --chain-id=shilei-qa --from=v0 --fees=4iris -b block -y --service-name=a001 --service-fee-cap=1uiris --data="{\"id\": \"1234\",\"name\": \"bianjie\",\"data\": \"facedata\"}" --providers=$(iris keys show v0 -a) --timeout=20 --repeated --frequency=20 --total=-1 |jq


查询请求列表
//如果查不到 可能是price低了，可能是min-resp-time没满足bind
iris query service requests a001 -o=json $(iris keys show v0 -a) |jq

===
记录
===
id：
D82A7A9ADB50FD7146E9250C0D1AEA29AD2E11AD3D780D5B677CE20E008882C000000000000000000000000000000002000000000000057A0000

request_context_id:
D82A7A9ADB50FD7146E9250C0D1AEA29AD2E11AD3D780D5B677CE20E008882C00000000000000000

-----

根据上一条返回的id
iris query service request -o=json D82A7A9ADB50FD7146E9250C0D1AEA29AD2E11AD3D780D5B677CE20E008882C000000000000000000000000000000002000000000000057A0000 |jq

//用<request-context-id>超时后可以查到，当前running也可以查到，看一下批次号
iris query service request-context -o=json CA8B41E7A0DDA0638AABD6A53665291624A7C2C117119BA254121930748A135F0000000000000000 |jq

//requests只能查询到当前活跃的
iris query service requests -o=json D82A7A9ADB50FD7146E9250C0D1AEA29AD2E11AD3D780D5B677CE20E008882C00000000000000000 4 |jq



2.相应请求
iris tx service respond --chain-id=shilei-qa --from=v0  --fees=4iris -b block -y  --data="{\"data\": \"userdata\"}" --result='{"code":200,"message":"it500"}' --request-id=$(iris query service requests a001 $(iris keys show v0 --address) -o=json | jq -r .requests[0].id) |jq



3.查询相应请求 ，用"2）"返回request id 【必须在批次内查询， 结束后就查不到了】
iris query service response D82A7A9ADB50FD7146E9250C0D1AEA29AD2E11AD3D780D5B677CE20E008882C00000000000000000000000000000000F000000000000067E0000

     ===========================
       取回服务调用产生的服务费（卖家），未响应超时的服务费会自动退还给（买家）
     ===========================
1.查询服务费
iris query service fees -o=json $(iris keys show v0 --address) |jq


2.提取服务调用产生的服务费
iris tx service withdraw-fees --chain-id=shilei-qa --from=v0 --fees=4iris -b block -y
iris tx service withdraw-fees iaa1pm432kqz62mutq439ynqs87u30r36062qdw977  --chain-id=shilei-qa --from=v0 --fees=4iris -b block -y

// iris query bank balances -o=json iaa1pm432kqz62mutq439ynqs87u30r36062qdw977 |jq

3.注意没有 withdraw-tax

     ===========================
      请求上下文相关 ====》》》  测下 nftlcd 的bug 下载一个新的
     ===========================
CONTEXTID=7C3E2CA1FE0D22F15647558FBAD6756A1E75B435965E46FAAC13E957F013069A0000000000000000
echo $CONTEXTID

1. 查询请求上下文 <request-context-id>， 返回这个call的很多字段信息
iris query service request-context -o=json $CONTEXTID |jq
//查询request id
iris query service requests a001 -o=json $(iris keys show v0 --address) |jq

2. 暂停请求上下文
iris tx service pause --chain-id=shilei-qa --from=v0  --fees=4iris -b block -y $CONTEXTID

3. 启动请求上下文
//state变成running , BatchState在complete状态也会变running
iris tx service start --chain-id=shilei-qa --from=v0 --fees=4iris -b block -y $CONTEXTID

4. 更新请求上下文
iris tx service update --chain-id=shilei-qa --from=v0 --fees=4iris -b block -y  --frequency=20 --total=3000 $CONTEXTID

5. 终止请求上下文
// state变成complete
// 非repeated 不能kill
iris tx service kill --chain-id=shilei-qa --from=v0 --fees=4iris -b block -y  $CONTEXTID

6. 查询请求上下文的请求列表 （注意价格不到的请求是会被过滤掉）
//列表只有有效的才会被查出， 但是iris service request-context 永远能查出）
iris query service request-context -o=json $CONTEXTID |jq

7. 查询请求上下文的响应列表（后面是request id）
//注意这个只能查活跃的 ， 过期的查不到。
iris query service response -o=json $CONTEXTID | jq
iris query service responses <request-context-id> <batch-counter>


================================================================================
================================================================================
oracle
================================================================================
================================================================================

===
注意
===
目前需要profiler, 起来的时候需要有profiler

rm -rf /Users/sherlock/.iriscli /Users/sherlock/.iris /Users/sherlock/testnet
iris testnet --v=1 --output-dir=/Users/sherlock/testnet  --node-dir-prefix=v --starting-ip-address=127.0.0.1 --chain-id=shilei-qa
sed -i '' 's/"profilers": null/"profilers": [{"description": "genesis","type": "Genesis", "address": "iaa1pm432kqz62mutq439ynqs87u30r36062qdw977","added_by": ""}]/g' /Users/sherlock/testnet/v0/iris/config/genesis.json
sed -i '' 's/"trustees": null/"trustees": [{"description": "genesis","type": "Genesis", "address": "iaa1pm432kqz62mutq439ynqs87u30r36062qdw977","added_by": ""}]/g' /Users/sherlock/testnet/v0/iris/config/genesis.json

sed -i '' 's/"172800000000000"/"20000000000"/g' /Users/sherlock/testnet/v0/iris/config/genesis.json
sed -i '' 's/"1814400000000000"/"20000000000"/g' /Users/sherlock/testnet/v0/iris/config/genesis.json
sed -i '' 's/"500000000"/"50000000000000"/g' /Users/sherlock/testnet/v0/iris/config/genesis.json
iris start --home=/Users/sherlock/testnet/v0/iris

iris keys add v1 --recover
figure seminar caught foster midnight cup method west brown hundred regular symptom family accuse tourist game burst audit tell foot acquire spike chair danger
// iris keys show v1
// iaa1pm432kqz62mutq439ynqs87u30r36062qdw977

iris tx bank send v0  $(iris keys show v1 -a) 100000iris --fees=4iris --chain-id=shilei-qa -b block -y
iris query bank balances -o=json $(iris keys show v1 -a) |jq

//使v0具有profiler权限
iris tx guardian add-profiler --address=$(iris keys show v0 -a) --description=v0 --from=v1 --chain-id=shilei-qa --fees=4iris -b block -y
iris tx guardian add-trustee --address=$(iris keys show v0 -a) --description=v0 --from=v1 --chain-id=shilei-qa --fees=4iris -b block -y


===
定义, 绑定
===
iris tx service define --chain-id=shilei-qa --from=v0 --description=service-description --author-description=author-description --tags=tag1,tag2 --schemas=/Users/sherlock/my_workspace/service/schemas.json --name=a001 --fees=4iris -b block -y

iris tx service bind --chain-id=shilei-qa --fees=4iris -b block -y  --from=v0 --deposit=20000iris --pricing=/Users/sherlock/my_workspace/service/pricing_1.0.json --service-name=a001 --qos=5

===
开始
===

1. Create Feed
//创建feed的同时相当于创建了一个service call
//threshold 不能大约provider的个数
//State初始=pause
//--value-json-path="data.user.name"
//不定义create会报错， 不绑定不会报错， 但是后续request会收不到。这里要注意。
iris tx oracle create --chain-id=shilei-qa --from=v0 --fees=4iris --description=description --latest-history=10 --service-name=a001 --input="{\"id\": \"1234\",\"name\": \"bianjie\",\"data\": \"facedata\"}" --providers=$(iris keys show v0 --address) --service-fee-cap=1uiris --timeout=20 --frequency=20 --threshold=1 --aggregate-func="avg" --value-json-path="data" --feed-name=f001 -b block -y  | jq

2. Query Feed
iris query oracle feed -o=json f001 | jq

3. Start Feed
//State=running
iris tx oracle start f001 --chain-id=shilei-qa --from=v0 --fees=4iris -b block -y  | jq

4. Pause Feed
//State=pause
iris tx oracle pause f001 --chain-id=shilei-qa --from=v0 --fees=4iris -b block -y  | jq

5. Update Feed
iris tx oracle edit f001 --chain-id=shilei-qa --from=v0 --fees=4iris --latest-history=2 -b block -y  | jq
// --providers=faa1r3tyupskwlh07dmhjw70frxzaaaufta37y25yr --service-fee-cap=1iris --timeout=5 --frequency=5 --total=-1 --threshold=1 --description  --latest-history --service-fee-cap --timeout --frequency --total --threshold

6. Query Feeds
iris query oracle feeds --state=running -o=json  | jq
iris query oracle feeds --state=paused -o=json | jq

//直接搜出所有的
iris query oracle feeds -o=json | jq

7. Query Value
iris query oracle value f001 -o=json | jq

    **************
    单人响应
    **************
iris tx service respond --chain-id=shilei-qa --from=v0 --fees=4iris --request-id=$(iris query service requests a001 $(iris keys show v0 --address) -o=json | jq -r .requests[0].id) --data="{\"data\": \"100\"}" --result='{"code":200,"message":"ok"}' -b block -y  | jq

iris query oracle value f001 -o=json | jq



    **************
    多人响应
    **************
    //同一个call， RequestContextID是的同一个。 但是针对于不同的provider的RequestID都是不一样的， 而且同一个provider每轮的RequestID也是不一样的

//先要创建v1 recover，转账
iris keys add v1 --recover
figure seminar caught foster midnight cup method west brown hundred regular symptom family accuse tourist game burst audit tell foot acquire spike chair danger
// iaa1pm432kqz62mutq439ynqs87u30r36062qdw977

iris tx bank send v0  $(iris keys show v1 -a) 100000iris --fees=4iris --chain-id=shilei-qa -b block -y
iris query bank balances $(iris keys show v1 -a)


//增加一个provider v1
iris tx oracle edit f001 --chain-id=shilei-qa --from=v0 --fees=4iris --providers=$(iris keys show v0 --address),$(iris keys show v1 --address) -b block -y  | jq

//v1也要绑定， 不绑定就不能respond
iris tx service bind --chain-id=shilei-qa --fees=4iris -b block -y  --from=v1 --deposit=20000uiris --pricing=/Users/sherlock/my_workspace/service/pricing_1.0.json --service-name=a001 --qos=5

//等一会儿，到下一轮，两个都可以查到了，此条不用执行
iris query service requests -o=json a001 $(iris keys show v0 --address) |jq
iris query service requests -o=json a001 $(iris keys show v1 --address) |jq

//v0 ， v1 ：分别response 1次，共2次
iris tx service respond --chain-id=shilei-qa --from=v0 --fees=4iris --request-id=$(iris query service requests a001 $(iris keys show v0 --address) -o=json | jq -r .requests[0].id) --data="{\"data\": \"100\"}" --result='{"code":200,"message":"ok"}' -b block -y  | jq

iris tx service respond --chain-id=shilei-qa --from=v1 --fees=4iris --request-id=$(iris query service requests a001 $(iris keys show v1 --address) -o=json | jq -r .requests[0].id) --data="{\"data\": \"200\"}" --result='{"code":200,"message":"ok"}' -b block -y  | jq

//查询结果，等到一轮timeout以后出结果， 如果出现150就说明成功了，取了2个的均值。
iris query oracle value f001 -o=json | jq


======================
    random
======================

===
不使用oracle
===
//记录request_id
//block-interval默认为10
iris tx random request-random --chain-id=shilei-qa --from=v0 --fees=4iris -b block -y --block-interval=20 | jq

//20块后立即可以查询 (20块内查不到)
iris query random random -o=json 998eef085bf9501fb867385ad37b6f1330c46fd7667b565710b3d292335c5f89 | jq


===
使用service中的oracle
 --oracle=true  ，注意： 这个oracle是只请求一次的！
===
1.定义 自带一个service：random
iris query service definition random

//自己定义： 目前已经子弹带了 所以这步不要自己做了 【注意一定要用random这个名字】
//iris tx service define --chain-id=shilei-qa --from=v0 --description=service-description --author-description=author-description --tags=tag1,tag2 --schemas=/Users/sherlock/my_workspace/service/schemas_random.json --name=random --fees=4iris -b block -y

2.绑定
iris tx service bind --chain-id=shilei-qa --fees=4iris -b block -y --from=v0 --deposit=20000uiris --pricing=/Users/sherlock/my_workspace/service/pricing_1.0.json --service-name=random --qos=5

//查询
iris query service bindings -o=json random | jq

3.request
//block-interval默认为10 【注意 默认使用 random名字的服务】【这里记录request_id， 最后5）rand rand用】
//注意 有2个request id， 一个是rand的request id， 一个是service的request id
iris tx random request-random --chain-id=shilei-qa --from=v0 --fees=4iris -b block -y --block-interval=10 --oracle=true --service-fee-cap=1uiris | jq

request id【rand】 ：9b1f2fbde28fa8cb1f88a39f8b132891053ed4c5b55ba018ea6a9307e74d3229
generate_height   ：8621


// 在(0,block-interval)之内可以通过 rand模块的rand-height查到该次请求， 0是指提交请求的那一刻
    iris query random queue -o=json 8775 | jq
    iris query random queue -o=json | jq

// 在(block-interval, block-interval+timeout[service默认超时时间100块])只能可以通过 service模块的request-id查到该次请求
// 现在request的第一条查询已经可以现实 request-id （这个没有做好）
// 注意， rand的request是单次的， repeated=false
    iris query service requests random -o=json $(iris keys show v0 -a)| jq


4.respond 这里会返回request-id 【过了20个块，就已经发出request了， 这个时候就可以respond了】这里用的service的request id
iris tx service respond --chain-id=shilei-qa --from=v0 --fees=4iris --request-id=$(iris query service requests random $(iris keys show v0 -a) -o=json | jq -r .requests[0].id) --data='{"seed":"3132333435363738393031323334353637383930313233343536373839303132"}' --result='{"code":200,"message":"ok"}' -b block -y | jq

5.查询结果， request id【rand】， 注意不是4中的service的request-id 。
iris query random random -o=json 9b1f2fbde28fa8cb1f88a39f8b132891053ed4c5b55ba018ea6a9307e74d3229 | jq


======================================================================================================
     系统mint验证
======================================================================================================
//只有一个验证人的情况, 所有奖励除了少部分税 都给这个验证人
//每块增加大约12.4^8， 会有小数
iris query distribution validator-outstanding-rewards $(iris keys show v0 --bech val -a) --chain-id=shilei-qa

// total
//每块增加大约16.4^8
iris query bank total


====================
staking （用的cosmos 有些问题， 暂时先不测）
====================

iris query staking validators |jq
iris query staking validator iva1leftlgy0n4wcyq274lmdzkyzgqcnpakfjzu7dr  |jq （有问题）

iris tx staking delegate fva1meq8el2m9ud62ffk3wkjfkc0yl7qhrj4ygqu7q 5iris --from=v0 --chain-id=shilei-qa --fees=4iris -b block -y
iris query staking delegation faa1capy9vr3ratgcqt6k442ga9kevuz05c8x8m3z2 fva1meq8el2m9ud62ffk3wkjfkc0yl7qhrj4ygqu7q --chain-id=shilei-qa
iris query staking delegations faa1capy9vr3ratgcqt6k442ga9kevuz05c8x8m3z2 --chain-id=shilei-qa
iris tx staking unbond fva1meq8el2m9ud62ffk3wkjfkc0yl7qhrj4ygqu7q 100iris --from=v0 --chain-id=shilei-qa --fees=4iris -b block -y
iris query staking unbonding-delegation faa1capy9vr3ratgcqt6k442ga9kevuz05c8x8m3z2 fva1meq8el2m9ud62ffk3wkjfkc0yl7qhrj4ygqu7q --chain-id=shilei-qa
iris tx distribution set-withdraw-addr faa18fxvahs5nc56zgtxu935zm22z20vgpvlhcqpnh --from=v0 --chain-id=shilei-qa --fees=4iris -b block -y
iris tx distribution withdraw-all-rewards --from v0 --chain-id=shilei-qa --fees=4iris -b block -y
iris query account faa18fxvahs5nc56zgtxu935zm22z20vgpvlhcqpnh --chain-id=shilei-qa



====================
gov （暂时先不测）
====================
iris tx gov submit-proposal --title="Test Proposal" --description="My awesome proposal" --type="Text" --deposit="10iris" --from=v0 --chain-id=shilei-qa --fees=4iris -b block -y
iris query gov proposal 1 --chain-id=shilei-qa
iris tx gov deposit 1 10000000iris --from=v0 --chain-id=shilei-qa --fees=4iris -b block -y
iris query gov param deposit --chain-id=shilei-qa
iris tx gov vote 1 yes  --from=v0 --chain-id=shilei-qa --fees=4iris -b block -y
iris query gov proposal 1 --chain-id=shilei-qa -o=json --indent //里面有字段可以看结果



====================
创建验证人 也没有测
====================
iris init v1 --home=/Users/sherlock/v1 --chain-id=shilei-qa
copy genesis toml
iris tendermint show-node-id --home=/Users/sherlock/testnet/v0/iris  //node id 下面用
toml 26657=》26687 3个，seeds = "f63440fe308c176380c0d80047871f3a667995ef@localhost:26656"
iris start --home=/Users/sherlock/v1 （此时正常追赶）

iris keys list
iris keys add v1 --recover (上面已经创建？faa1lcuw6ewd2gfxap37sejewmta205sgssmv5fnju)
iris keys show x1 //faa1lcuw6ewd2gfxap37sejewmta205sgssmv5fnju
echo 12345678 | iris tx send v0 faa1lcuw6ewd2gfxap37sejewmta205sgssmv5fnju 100000000iris --chain-id=shilei-qa --fees=4iris -b block -y
iris query account faa1lcuw6ewd2gfxap37sejewmta205sgssmv5fnju --chain-id=shilei-qa

iris tendermint show-validator --home=/Users/sherlock/v1
//fcp1zcjduepqpzudzh5k84h5zpnsp9l96pql7n0yaqd9pfcvcw603ngyvrcz6fdqf09vng
echo 12345678 | iris tx staking create-validator --pubkey=fcp1zcjduepqpzudzh5k84h5zpnsp9l96pql7n0yaqd9pfcvcw603ngyvrcz6fdqf09vng --moniker=v1 --amount=10000iris --min-self-delegation=1 --from=v1 --chain-id=shilei-qa --fees=4iris -b block -y --commission-max-change-rate=0.1 --commission-max-rate=0.1 --commission-rate=0.1  //别人抵押 最少多少个?  --min-self-delegation=1 ?
iris query staking validators --chain-id=shilei-qa

//编辑验证人（24小时？）
echo 12345678 | iris tx staking edit-validator --moniker=v11 --from=v1 --chain-id=shilei-qa --fees=4iris -b block -y --commission-rate=0.11

//redelegate (gas会抄)
echo 12345678 | iris tx staking redelegate fva1jajds058muyuqr9e2uxgr8g3phjceu6z2tntj0 fva1lcuw6ewd2gfxap37sejewmta205sgssme9ru0m 5iris --from=v0 --chain-id=shilei-qa --fees=4iris -b block -y --gas=300000

iris query slashing signing-info --chain-id=shilei-qa fcp1zcjduepqpzudzh5k84h5zpnsp9l96pql7n0yaqd9pfcvcw603ngyvrcz6fdqf09vng

======================================================================================================
    Distribution
======================================================================================================

iris query distribution rewards $(iris keys show v0 -a)

     ===========================
                准备
     ===========================
iris tx bank send v0 $(iris keys show v1 -a) 1iris --fees=4iris --chain-id=shilei-qa -b block -y
iris query bank balances $(iris keys show v1 -a) |jq

iris tx distribution set-withdraw-addr $(iris keys show v1 -a)  --from=v0 --chain-id=shilei-qa --fees=4iris -b block -y
iris tx bank send v0 $(iris keys show v0 -a) 1iris --fees=100000iris --chain-id=shilei-qa -b block -y


iris query distribution validator-outstanding-rewards $(iris keys show v0 --bech val -a) --chain-id=shilei-qa
iris tx distribution withdraw-rewards $(iris keys show v0 --bech val -a)  --from=v0 --chain-id=shilei-qa --fees=4iris -b block -y
iris query bank balances $(iris keys show v1 -a) |jq



======================================================================================================
======================================================================================================
======================================================================================================


coinswap sawag（rest 用不了 暂时不能测）

、、、 token

。。。 service

、、、NFT

。。。HTLC

。。、random

。。、guardian

。。。oracle


======================================================================================================
======================================================================================================

irishub v1.0 ，重构后的代码初步测试有以下问题需修复：

https://gitlab.bianjie.ai/vincent/document/blob/patch-1/projects/issues.md


cosmos自带的一些bug，记录待修复：

rest 和 swagger 暂时用不了


iris query staking validator 的help中的cosmos地址
iris query staking validator -h
Example:
$ iris query staking validator cosmosvaloper1gghjut3ccd8ay0zduzj64hwre2fxs9ldmqhffj


iris tx distribution withdraw-rewards 无法提取收益

Distribution 没有查询 withdraw-addr 地址的接口

iris query staking validator iva*** 有问题 ，无法查询



==================
离线交易
==================
注意：因为不校验，所以只能用iris-atto， 不能用iris

iris tx bank send $(iris keys show v0 --address) $(iris keys show v0 --address) 1iris-atto --chain-id=shilei-qa --fees=4iris-atto  -b block -y --generate-only >~/my_workspace/Tx-generate

//注意 不加home会崩溃
iris tx sign /Users/sherlock/my_workspace/Tx-generate   --from=v0 --chain-id=shilei-qa --home=/Users/sherlock/testnet/v0/iris >~/my_workspace/Tx-sign
iris tx broadcast ~/my_workspace/Tx-sign -b block -y



*******************************
    多签账户 multisig 【转账交易】
*******************************
1）创建普通账户（有的话就不需要了）
iris keys list
iris keys add v0 --recover
iris keys add v1 --recover

2）创建多签账户， 给这个多签账户转一笔初始token（10iris）
iris keys add x1 --multisig-threshold=2 --multisig=v0,v1
iris tx bank send $(iris keys show v0 --address) $(iris keys show x1 --address) 9iris --fees=4iris --chain-id=shilei-qa --from=v0 -b block -y

3）多签账户构造【转账】交易
iris tx bank send $(iris keys show x1 --address) $(iris keys show v0 --address) 1iris-atto --chain-id=shilei-qa --fees=4iris-atto  -b block -y --generate-only >~/my_workspace/Tx-generate

4）用v0，v1对Tx-generate进行签名
iris tx sign /Users/sherlock/my_workspace/Tx-generate --from=v0 --chain-id=shilei-qa --multisig=$(iris keys show x1 --address)  --signature-only >~/my_workspace/Tx-sign-v0

iris tx sign /Users/sherlock/my_workspace/Tx-generate --from=v1 --chain-id=shilei-qa --multisig=$(iris keys show x1 --address)  --signature-only >~/my_workspace/Tx-sign-v1

5）合并2个签名,并生成Tx-signed
iris tx multisign --chain-id=shilei-qa /Users/sherlock/my_workspace/Tx-generate x1 /Users/sherlock/my_workspace/Tx-sign-v0 /Users/sherlock/my_workspace/Tx-sign-v1 > ~/my_workspace/Tx-signed

6）广播签名
iris tx broadcast /Users/sherlock/my_workspace/Tx-signed -b block -y


========
ledger ，nano
========

Ledger 输入pin 00000000，进入cosmos app
iris keys add b --ledger  // faa14qy8a6eed5xqjudzgnmutth6ck4f6yz3cnka6k
iris keys show b

iris tx bank send v0 $(iris keys show b -a) 100iris --fees=4iris --chain-id=shilei-qa -b block -y
iris query bank balances -o=json $(iris keys show b -a) |jq

iris tx bank send b iaa16utfzmx48pe5rvc7zq0mnmk4a96v7yg2tyrutd 90iris --fees=4iris --chain-id=shilei-qa -b block -y


*******************************************
          更新 doc： 独立的仓库和测试分开
*******************************************
----------- 直接在主分支上push
git checkout -b shilei/doc—fix upstream/master
图形界面 git commit
git push upstream shilei/update-changelog-0.15 //第一次会创建分支
//去网上pr

WIP: Add "json indent" usage and fix the "query output format" of all the docs
R4R: Update `doc/swagger version/version.go` to v0.14.1

-------
部署document
-------
安装：
brew install yarn
yarn install

部署：
cd /Users/sherlock/go/src/github.com/irishub/docs
rm -fr node_modules
yarn serve

打开：
http://localhost:8080/

