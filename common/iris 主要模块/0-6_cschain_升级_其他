**************************
升级
**************************





=========================================================================
=========================================================================
升级测试
=========================================================================
=========================================================================
测试过去版本（8292dd322cb6cf927bef3bd5776e93f07436c694）：
8292dd322cb6cf927bef3bd5776e93f07436c694

cd /Users/sherlock/go/src/gitlab.bianjie.ai/cschain
git fetch --all
git checkout .
git reset --hard 8292dd322cb6cf927bef3bd5776e93f07436c694
git branch && git rev-parse HEAD

make install



====
升级后的版本（v1）：
git reset --hard 0da9fd96cb325324af8e1c7ff1d03a1a10e8ec02
git branch && git rev-parse HEAD

make install

====
起链
====
cd ~ && rm -rf .cschain testnet
cschain testnet --v=1 --chain-id=shilei-qa --output-dir=/Users/sherlock/testnet --node-dir-prefix=v --starting-ip-address=127.0.0.1
sed -i '' 's/stake/point/g' /Users/sherlock/testnet/v0/cschain/config/genesis.json
sed -i '' 's/stake/point/g' /Users/sherlock/testnet/v0/cschain/config/app.toml
sed -i '' 's/\"500000000\"/\"50000000000000000\"/g' /Users/sherlock/testnet/v0/cschain/config/genesis.json
cschain start --home=/Users/sherlock/testnet/v0/cschain


====
看下 record
====
返回没有record
cschain tx record create --chain-id=shilei-qa "hahaha" "flighting" --from=v0 --fees=4point -b block -y --meta="metadata" --uri="uridata"
Error: unknown command "record" for "tx"

====
造一些数据
====
cschain tx bank send v0 $(cschain keys show v1 -a) 10000point --chain-id=shilei-qa --fees=4point -b block -y
cschain tx token issue --name=token-name --min-unit="mu01" --scale=9 --initial-supply=10000 --max-supply=30000 --mintable=true --from=v0 --chain-id=shilei-qa --fees=4point -b block -y --symbol=a01
cschain tx nft issue d01 --from=v0 --chain-id=shilei-qa --fees=4point -b block -y
cschain tx nft mint d01 a01 --recipient=$(cschain keys show v0 --address) --name="name" --uri="tokenURI" --data="tokenData" --from=v0 --chain-id=shilei-qa --fees=4point -b block -y
cschain tx admin add-roles $(cschain keys show v1 --address) NODE_ADMIN --from=v0 --chain-id=shilei-qa --fees=4point -b block -y
cschain keys add c1
cschain tx admin block-account $(cschain keys show c1 --address) --from=v0 --chain-id=shilei-qa --fees=4point -b block -y


cschain query bank balances $(cschain keys show v1 -a)
cschain query token tokens -o=json $(cschain keys show v0 -a) |jq
cschain query nft denom -o=json d01 |jq
cschain query nft token -o=json d01 a01 |jq
cschain query admin roles $(cschain keys show v1 --address)
cschain query admin blacklist

找个页面，存下记录。

====
发起升级
====
cschain tx upgrade create "v1" --upgrade-height=25 --chain-id=shilei-qa --fees=10point -b block -y --from=v0

在height=1300的时候，网络终止共识，节点退出运行
更换，v1版本
cschain start --home=/Users/sherlock/testnet/v0/cschain

//查询已升级的
cschain query upgrade applied v1

//查询当前升级的
cschain query upgrade plan

//取消升级
cschain tx upgrade cancel --chain-id=shilei-qa --fees=10point -b block -y --from=v0

====
验证
====
1）
cschain query bank balances $(cschain keys show v1 -a)
cschain query token tokens -o=json $(cschain keys show v0 -a) |jq
cschain query nft denom -o=json d01 |jq
cschain query nft token -o=json d01 a01 |jq
cschain query admin roles $(cschain keys show v1 --address)
cschain query admin blacklist

2） record
cschain tx record create --chain-id=shilei-qa "hahaha" "flighting" --from=v0 --fees=4point -b block -y --meta="metadata" --uri="uridata"

cschain query record record 691ad26fa1efe55c237d7451f0777869504643eabc1c788a3d813fafa9350f26 -o=json |jq

3）
自动化测试

====
第二次升级 （不实际升级）
====
cschain tx upgrade create "v2" --upgrade-height=2100 --chain-id=shilei-qa --fees=10point -b block -y --from=v0

到了2100，停链，用v1执行下面会崩溃
cschain start --home=/Users/sherlock/testnet/v0/cschain

要加上参数，才可以运行（用老版本 跳过2100）
cschain start --home=/Users/sherlock/testnet/v0/cschain --unsafe-skip-upgrades=2100




************************************************************************
其他
************************************************************************



==========================================
==========================================
validator node(白名单)
==========================================
==========================================

参见irita