
========================================================================================================================
========================================================================================================================
================== init gentx  起链 ======================================================================================================
========================================================================================================================
========================================================================================================================
参看后面 openssl

========================================================================================================================
========================================================================================================================
================== export ======================================================================================================
========================================================================================================================
========================================================================================================================

cd ~ && rm -rf .iritacli .irita testnet
irita testnet --v=1 --chain-id=shilei-qa --output-dir=/Users/sherlock/testnet --node-dir-prefix=v --starting-ip-address=127.0.0.1
irita start --home=/Users/sherlock/testnet/v0/irita --pruning=nothing

注意：使用export功能的话，一定要加上--pruning=nothing ， 这个参数的含义是每个新块都会把数据写入数据库。
如果没有这个参数， 会导致新链100块之内不能export，因为数据没有写入数据库。 nft也不能导出

//irita export --home=/Users/sherlock/testnet/v0/irita >/Users/sherlock/genesis.json
irita export --for-zero-height --home=/Users/sherlock/testnet/v0/irita >/Users/sherlock/genesis.json
irita unsafe-reset-all --home=/Users/sherlock/testnet/v0/irita

"time_iota_ms":"0" 》 "time_iota_ms":"10"
cp ~/genesis.json /Users/sherlock/testnet/v0/irita/config
irita start --home=/Users/sherlock/testnet/v0/irita


========================================================================================================================
========================================================================================================================
=========多种格式地址查询======================================================================================================
========================================================================================================================
========================================================================================================================
// 一共4种

irita

======
iaa ,iap
======
iritacli keys show v0

==>
  address: iaa1djd5sf2wxym7qjzq8u0aut0hmd7derlgkpah0h
  pubkey: iap1addwnpepqfw4kt4vxdkuczppecxwxgec8qynk9jdnkzrs8njkpsvzx88nzayznxjw09


======
icp
======
iritacli query validator validator --trust-node v0

==>
    pubkey: icp1ulx45dfpqf657pzs37n5ru9shsapm39ttzjq8435s4txlgw7cl6sjn8vg2jj5xsl6mc


======
ica
======
iritacli query slashing signing-info --trust-node icp1ulx45dfpqf657pzs37n5ru9shsapm39ttzjq8435s4txlgw7cl6sjn8vg2jj5xsl6mc

==>
    address: ica1kqgc0cs5fsjr8fhv8m5c4vzuvxpaww2cms893v


========================================================================================================================
========================================================================================================================
================== openssl ===============================================================================================
========================================================================================================================
========================================================================================================================
加密用的, 如果不按照testnet将不可用

======================
安装
======================
cd /Users/sherlock/go/src/github.com/
git clone https://github.com/openssl/openssl.git
cd openssl && ./config
sudo make install //注意这里一定要sudo权限


======================
单节点手动测试网（注意：不用testnet）
======================
创建 Genesis 文件并启动网络
rm -rf ~/testnet

1）、初始化 genesis.json 文件
irita init --home=/Users/sherlock/testnet/x1/irita --chain-id=shilei-qa x1

2）、创建一个初始化账户x1
iritacli keys add x1

3）、将x1添加到genesis.json 文件，并为该账户添加'RootAdmin'权限
irita add-genesis-account $(iritacli keys show x1 -a) 1000000000point --home=/Users/sherlock/testnet/x1/irita --root-admin

4）、导出验证节点x1(步骤1生成的)私钥为pem格式，方便用于申请节点证书
irita genkey --home=/Users/sherlock/testnet/x1/irita --out-file=/Users/sherlock/testnet/priv.pem

5）、使用步骤4中的私钥文件生成证书请求
自签证书 （大部分选项回车用默认，密码写一个）
openssl req -new -x509 -sm3 -sigopt "distid:1234567812345678" -key /Users/sherlock/testnet/priv.pem -out /Users/sherlock/testnet/cert.crt -days 365

6）、导入企业根证书
irita set-root-cert /Users/sherlock/testnet/cert.crt --home=/Users/sherlock/testnet/x1/irita

7）、添加x1到genesis.json文件 （add-genesis-validator）
irita add-genesis-validator --name=x1 --cert=/Users/sherlock/testnet/cert.crt --power=100 --home=/Users/sherlock/testnet/x1/irita --from=x1

8）、启动节点 （--pruning=nothing 所有数据都保存）
irita start --home=/Users/sherlock/testnet/x1/irita --pruning=nothing


======================
用证书创建新的validator（v0 自签）
======================
参见csrb

======================
用证书创建新的validator （普通方法）
======================
参见csrb

=========================
不初始化节点，凭空创建一个证书
=========================
参见csrb

=========================
  ED25519 编码
=========================
参见csrb



=====================================================================================================================
=====================================================================================================================
======    DID ====================================================================================================
=====================================================================================================================
=====================================================================================================================


============
新创建"空的"identity
============
//所有参数都不带， 直接生成新UUID
//记录返回id 后续使用
iritacli tx identity create --chain-id=shilei-qa --from=v0 -o=json --indent -b block -y

====================================
【ecdsa加密】新创建带id，带参数的dentity【ecdsa加密】
====================================
// --id --pubkey --pubkey-algo(加密类型) --credentials(uri) --cert-file

openssl req -new -x509 -sm3 -sigopt "distid:1234567812345678" -key /Users/sherlock/testnet/root_key.pem -out /Users/sherlock/testnet/cert.crt -days 365

iritacli tx identity create --id=67eb663eccc148adb6878743e3156c01 --pubkey=02b7a8c8144ad8e8162c2d408c55a212de459b88e04dbc5eb78d75baa11c38675c --pubkey-algo=ecdsa --credentials="credentials-uri" --cert-file=/Users/sherlock/testnet/cert.crt --chain-id=shilei-qa --from=v0 -o=json --indent -b block -y

iritacli query identity identity --trust-node 67eb663eccc148adb6878743e3156c01

*****
获取id
*****
//16字节的 16进制字符即可。即32个字符。
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA （量尺）
67eb663eccc148adb6878743e3156c01
--id=67eb663eccc148adb6878743e3156c01

*****
获取pubkey
*****
加密类型:ecdsa
http://dbis.rwth-aachen.de/~renzel/mobsos/lib/js/jsrsasign/sample-ecdsa.html （需要翻墙）
直接点生成，复制pubkey
0483d453336102a7429c9b4735031fc1a4bd74818e3d0ecc407198f5fb107a45b5bedffc88c4495059d2f014d3a82d22cd8c5e4889b660b4fb599fdf60fda1741d
去掉开头的04， 截取前32字节（1个字节8位=2个4位（一个16进制字符表示）， 也就是64个16进制的字符。）
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA （量尺）
83d453336102a7429c9b4735031fc1a4bd74818e3d0ecc407198f5fb107a45b5be
--pubkey=83d453336102a7429c9b4735031fc1a4bd74818e3d0ecc407198f5fb107a45b5be
--pubkey-algo=ecdsa

*****
获取cert-file
*****
//自签证书
openssl req -new -x509 -sm3 -sigopt "distid:1234567812345678" -key /Users/sherlock/testnet/root_key.pem -out /Users/sherlock/testnet/cert.crt -days 365

--cert-file=/Users/sherlock/testnet/cert.crt

*****
credentials
*****
就是一个字符串



====================================
修改identity
====================================
iritacli tx identity update 67eb663eccc148adb6878743e3156c01 --credentials="credentials-uri2" --chain-id=shilei-qa --from=v0 -o=json --indent -b block -y

//可修改参数:
--pubkey=02b7a8c8144ad8e8162c2d408c55a212de459b88e04dbc5eb78d75baa11c38675c
--pubkey-algo=ecdsa
--credentials="credentials-uri"
--cert-file=/Users/sherlock/testnet/cert.crt


====================================
查询identity
====================================
iritacli query identity identity --trust-node 67eb663eccc148adb6878743e3156c01


============
其他加密方法
============
//ECDSA 33  02+32
//ED25519 32
//SM2 03+32
//rsa和dsa

参见csrb

============
rest
============
参见csrb

