*******************************************
          下载 （github上的，现在转移了）
*******************************************
https://github.com/bianjieai/irita
cd /Users/sherlock/go/src/github.com/

这个后还没有做：
git clone https://github.com/bianjieai/irita.git
cd irishub
git remote add upstream https://github.com/irisnet/irishub.git
git fetch --all //此时应该Fetching origin；  Fetching upstream
git checkout -b develop upstream/develop   //git branch 建立本地develop代码分支， 不能同时拥有origin和upstream
git branch


更新：
cd /Users/sherlock/go/src/github.com/irita
git fetch --all
git checkout .
// git checkout master
git pull
git branch && git rev-parse HEAD

make install

跟新依赖（开代理）
//注意：如果代理不稳定 可以用这条命令 export GOPROXY=https://goproxy.cn
go mod tidy



*******************************************
          用testnet 直接手动起
*******************************************

cd ~ && rm -rf .irita .irita testnet
irita testnet --v=1 --chain-id=shilei-qa --output-dir=/Users/sherlock/testnet --node-dir-prefix=v --starting-ip-address=127.0.0.1
sed -i '' 's/"172800000000000"/"20000000000"/g' /Users/sherlock/testnet/v0/irita/config/genesis.json
sed -i '' 's/"1814400000000000"/"20000000000"/g' /Users/sherlock/testnet/v0/irita/config/genesis.json
sed -i '' 's/"500000000"/"50000000000000"/g' /Users/sherlock/testnet/v0/irita/config/genesis.json
sed -i '' 's/stake/point/g' /Users/sherlock/testnet/v0/irita/config/genesis.json
sed -i '' 's/stake/point/g' /Users/sherlock/testnet/v0/irita/config/app.toml
irita start --home=/Users/sherlock/testnet/v0/irita


//允许转账
irita tx params update /Users/sherlock/my_workspace/params/param_bank.json --from=v0 --chain-id=shilei-qa --fees=4point -b block -y

改token owner的genesis
sed -i '' 's/iaa183rfa8tvtp6ax7jr7dfaf7ywv870sykxxykejp/XXXXX/g' /Users/sherlock/testnet/v0/irita/config/genesis.json

---
2个validators
---
cd ~ && rm -rf .irita .irita testnet
echo 12345678 | irita testnet --v=2 --chain-id=shilei-qa --output-dir=/Users/sherlock/testnet --node-dir-prefix=v --starting-ip-address=127.0.0.1
修改v1里面3个ip
mv /Users/sherlock/testnet/v0/irita /Users/sherlock/.irita
irita start --home=/Users/sherlock/testnet/v0/irita
irita start --home=/Users/sherlock/testnet/v1/irita

*******************************************

irita keys show v0
irita query account $(irita keys show v0 --address) 
irita query bank balances  $(irita keys show v0 --address)

irita tx bank send v0 iaa13dn2vc5ppcrxxnumdkrpuhgnmfjr26fur64hau 100000point --chain-id=shilei-qa --fees=4point -b block -y
irita query account iaa13dn2vc5ppcrxxnumdkrpuhgnmfjr26fur64hau 
irita query bank balances iaa13dn2vc5ppcrxxnumdkrpuhgnmfjr26fur64hau


**************************************************************************************
**************************************************************************************
**************************************************************************************


*******************************************
           启动lcd
*******************************************

修改api.toml
# Enable defines if the API server should be enabled.
enable = true

# Swagger defines if swagger documentation should automatically be registered.
swagger = true

# Address defines the API server to listen on.
address = "tcp://0.0.0.0:1317"


swagger：
http://localhost:1317/swagger


*******************************************
           离线交易
*******************************************

irita tx send $(csrbcli keys show v0 --address) csrb13dn2vc5ppcrxxnumdkrpuhgnmfjr26fufzk3jf 50000000point --chain-id=shilei-qa --fees=4point -b block -y --generate-only >~/my_workspace/Tx-generate
irita tx sign ~/my_workspace/Tx-generate  --from=v0 --chain-id=shilei-qa >~/my_workspace/Tx-sign
irita tx broadcast ~/my_workspace/Tx-sign -b block -y

irita query bank balances  csrb13dn2vc5ppcrxxnumdkrpuhgnmfjr26fufzk3jf

注意利用lcd broadcast的时候要 改tx格式， 加mode





================================================================================================================
irita LCD nft  目前存在的问题： 【这些lcd 有时间再验证】
1. GET   /nft/nfts/collections/{denom}
  get方法连续性查询会出现  "error": "invalid request: failed to load state at height 249; version does not exist (latest height: 250)"
  必须重启 rest客户端 才能恢复。

2. Get 方法如果输入留空， 执行后， swagger会假死。

5） update context 的时候， service_fee_cap 的demon 设置一个不存在的token （比如iris），会出现如下bug：
   1。交易可以发送成功，
   2。后续request状态会异常， 查询context的时候出现无法解析的空数据。

6） LCD POST /service/fees/{provider}/withdraw  这个接口未正确迁移irita， 返回404



*******************************************
           lcd 签名
*******************************************
irita rest-server 

irita tx sign "/Users/sherlock/my_workspace/waterdrop/common/iris 主要模块/0-7_tx-generate" --from=v0 --chain-id=shilei-qa >~/my_workspace/Tx-sign
irita tx broadcast ~/my_workspace/Tx-sign -b block -y



=====
  "schemas": "{\"$schema\": \"http://json-schema.org/draft-04/schema#\",\"title\": \"title\",\"description\": \"description\",\"type\": \"type\",\"input\": {    \"type\": \"object\",    \"description\": \"request data\",    \"properties\": {        \"id\": {            \"type\": \"string\",            \"description\": \"id\"        },        \"name\": {            \"type\": \"string\",            \"description\": \"name\"        },        \"data\": {            \"type\": \"string\",            \"description\": \"data\"        }    },    \"required\": [\"id\", \"data\"]},\"output\": {    \"type\": \"object\",    \"description\": \"response result\",    \"properties\": {        \"data\": {            \"type\": \"string\",            \"description\": \"result data\"        }    },    \"required\": [\"data\"]},\"error\": {    \"type\": \"object\",    \"description\": \"error msg\",    \"properties\": {        \"code\": {            \"type\": \"number\",            \"description\": \"error code\"        },        \"msg\": {            \"type\": \"string\",            \"description\":\"detailed error msg\"        }    },    \"required\": [\"msg\"]}              }"

=====
   "pricing": "{    \"price\": \"1point\",\"promotions_by_time\": [{\"start_time\": \"2120-03-31T08:11:31Z\",\"end_time\": \"2120-04-10T08:11:31Z\",\"discount\": \"0.6\"},{\"start_time\": \"2219-01-10T13:30:30Z\",\"end_time\": \"2219-03-10T13:30:30Z\",\"discount\": \"0.9\"}],\"promotions_by_volume\": [{\"volume\": 2211,\"discount\": \"0.1\"},{\"volume\": 4000,\"discount\": \"0.5\"}]}",

=====
--data="{\"id\": \"1234\",\"name\": \"bianjie\",\"data\": \"facedata\"}"


*******************************************
       限制转移 UnrestrictedTokenTransfer
*******************************************

========
准备工作
========
修改  /Users/sherlock/testnet/v0/irita/config/app.toml
# Enable defines if the API server should be enabled.
enable = true

修改参数 ： UnrestrictedTokenTransfer （注意是驼峰方式）
irita tx params update /Users/sherlock/my_workspace/params/param_bank.json --from=v0 --chain-id=shilei-qa --fees=4point -b block -y

查询这个值，是不是改了：
http://localhost:1317/cosmos/bank/v1beta1/params

值为false ： 限制转移
规则：
    1) Send: 发送方和接受方（之一）必须是 token owner
    2) MultiSend: 对于每个token,   要么 inputs（可能为多个地址）要么outputs（可能为多个地址），必须都是此 token 的 owner

注意1：不能用以下方式查，代码里面没有加上去
irita query slashing params

注意2：
需要把v0（root admin）的地址加到主token的owner里面。（genesis》"tokens"》owner）
后续看情况是不是要启动的时候改genesis。

***********
用testnet 起链  改token owner
***********

cd ~ && rm -rf .irita .irita testnet
irita testnet --v=1 --chain-id=shilei-qa --output-dir=/Users/sherlock/testnet --node-dir-prefix=v --starting-ip-address=127.0.0.1
sed -i '' 's/"172800000000000"/"20000000000"/g' /Users/sherlock/testnet/v0/irita/config/genesis.json
sed -i '' 's/"1814400000000000"/"20000000000"/g' /Users/sherlock/testnet/v0/irita/config/genesis.json
sed -i '' 's/"500000000"/"50000000000000"/g' /Users/sherlock/testnet/v0/irita/config/genesis.json
sed -i '' 's/stake/point/g' /Users/sherlock/testnet/v0/irita/config/genesis.json
sed -i '' 's/stake/point/g' /Users/sherlock/testnet/v0/irita/config/app.toml

【这里手动改下】
subl /Users/sherlock/testnet/v0/irita/config/genesis.json 【v0的address 覆盖原来的token owner】
irita start --home=/Users/sherlock/testnet/v0/irita

确认owner是刚才的改的
cschain query token tokens -o=json  |jq

值改为false，开启限制。
irita tx params update /Users/sherlock/my_workspace/params/param_bank.json --from=v0 --chain-id=shilei-qa --fees=4point -b block -y

验证（正常send）：
irita tx bank send v0 $(irita keys show v1 -a) 100000point --chain-id=shilei-qa --fees=4point -b block -y
irita tx bank send v1 $(irita keys show v0 -a) 100point --chain-id=shilei-qa --fees=4point -b block -y

验证（不能send）：
irita tx bank send v1 iaa13dn2vc5ppcrxxnumdkrpuhgnmfjr26fur64hau 100point --chain-id=shilei-qa --fees=4point -b block -y





========================================================================================================================
========================================================================================================================
================== node 和 validator ===================================================================================
========================================================================================================================
========================================================================================================================



=====
create validator
注意：
一个全节点有两个证书：1. validator证书  2. node证书
=====
//openssl
irita init --home=/Users/sherlock/testnet/x2/irita --chain-id=shilei-qa x2
irita genkey --type=validator --home=/Users/sherlock/testnet/x2/irita --out-file=/Users/sherlock/testnet/priv_x2_validator.pem
openssl req -new -key /Users/sherlock/testnet/priv_x2_validator.pem -out /Users/sherlock/testnet/key_x2_validator.csr -sm3 -sigopt "distid:1234567812345678"
openssl x509 -req -in /Users/sherlock/testnet/key_x2_validator.csr -out /Users/sherlock/testnet/key_x2_validator.crt -sm3 -sigopt "distid:1234567812345678" -vfyopt "distid:1234567812345678" -CA /Users/sherlock/testnet/root_cert.pem -CAkey /Users/sherlock/testnet/root_key.pem -CAcreateserial

//通过cert.crt创建验证人
irita tx node create-validator --name=x2 --cert=/Users/sherlock/testnet/key_x2_validator.crt --power=10 --from=v0 --chain-id=shilei-qa --fees=4point -b block -y

VID=083345EC666DFCBB99D6E7CB0E4A5CCD855D47925F0E24A3D9C4EDD540CAA10E



====== 按照上面步骤创建完一个validator后， 起一个全节点 ======
cp /Users/sherlock/testnet/v0/irita/config/config.toml /Users/sherlock/testnet/x2/irita/config/config.toml
cp /Users/sherlock/testnet/v0/irita/config/genesis.json /Users/sherlock/testnet/x2/irita/config/genesis.json

irita tendermint show-node-id --home=/Users/sherlock/testnet/v0/irita
复制id 到下面的seed， 下面2条顺序不能变
sed -i '' 's/2665/2666/g' /Users/sherlock/testnet/x2/irita/config/config.toml
sed -i '' 's/seeds = ""/seeds = "64fa80514c50b9397b8a7af34188738eac994a44@localhost:26656"/g' /Users/sherlock/testnet/x2/irita/config/config.toml
sed -i '' 's/9090/9091/g' /Users/sherlock/testnet/x2/irita/config/app.toml


=====
启动
=====
//此时正常追赶， validator就算上线了， 不会被jail
irita start --home=/Users/sherlock/testnet/x2/irita


//验证
irita query tendermint-validator-set
irita query node nodes （只能看到一个 因为还没有授权）
irita tendermint show-validator --home=/Users/sherlock/testnet/v0/irita
irita tendermint show-validator --home=/Users/sherlock/testnet/x2/irita


=====
其他validator 命令
=====

---
query validator（s）：
---
irita query node validator $VID
irita query node list


---
update validator
---
irita tx node update-validator $VID --cert=/Users/sherlock/testnet/key_x2.crt --power=20 --from=v0 --chain-id=shilei-qa --fees=4point -b block -y
验证:
irita query node validator $VID



---
remove validator
---
irita tx node remove-validator $VID --from=v0 --chain-id=shilei-qa --fees=4point -b block -y
验证:
irita query node list


---
unjail validator 注意:这个在slash模块下 【代码里写了10分钟，jail后过10分钟才可以unjail】
---
irita tx slashing unjail $VID --from=v0 --chain-id=shilei-qa --fees=4point -b block -y



==============================
node 相关，实际是和validator相互独立的。
node测试本身不用一定是validator
==============================
=====
起全节点 （普通节点 不是validtor）
=====
//如果已经创建该节点(validator) ，则这步是不需要的
irita init --home=/Users/sherlock/testnet/x2/irita --chain-id=shilei-qa x2

//从这里开始
irita genkey --type=node --home=/Users/sherlock/testnet/x2/irita --out-file=/Users/sherlock/testnet/priv_x2_node.pem
openssl req -new -key /Users/sherlock/testnet/priv_x2_node.pem -out /Users/sherlock/testnet/key_x2_node.csr -sm3 -sigopt "distid:1234567812345678"
openssl x509 -req -in /Users/sherlock/testnet/key_x2_node.csr -out /Users/sherlock/testnet/key_x2_node.crt -sm3 -sigopt "distid:1234567812345678" -vfyopt "distid:1234567812345678" -CA /Users/sherlock/testnet/root_cert.pem -CAkey /Users/sherlock/testnet/root_key.pem -CAcreateserial

//修改参数后，起全节点
cp /Users/sherlock/testnet/v0/irita/config/config.toml /Users/sherlock/testnet/x2/irita/config/config.toml
cp /Users/sherlock/testnet/v0/irita/config/genesis.json /Users/sherlock/testnet/x2/irita/config/genesis.json

irita tendermint show-node-id --home=/Users/sherlock/testnet/v0/irita
复制id 到下面的seed， 下面2条顺序不能变
sed -i '' 's/2665/2666/g' /Users/sherlock/testnet/x2/irita/config/config.toml
sed -i '' 's/seeds = ""/seeds = "e75d9ce5e56f5a15e936b579f4f3f57dc46fcf42@localhost:26656"/g' /Users/sherlock/testnet/x2/irita/config/config.toml
sed -i '' 's/9090/9091/g' /Users/sherlock/testnet/x2/irita/config/app.toml
irita start --home=/Users/sherlock/testnet/x2/irita


=====
grant 授权（加入白名单）
=====
irita tx node grant --name=x2 --cert=/Users/sherlock/testnet/key_x2_node.crt --from=v0 --chain-id=shilei-qa --fees=4point -b block -y

记录：
NID=587E463542DAA02B79C1F27CDB50E6D423DBAD17

验证：
irita query node nodes
irita query node node $NID

=====
v0节点 限制非白名单连接
=====
subl /Users/sherlock/testnet/v0/irita/config/config.toml
filter_peers = true


=====
revoke （移除白名单）
=====
注意：
需要：（ROOT_ADMIN，NODE_ADMIN）admin

irita query admin roles $(irita keys show v0 --address)
irita tx node revoke $NID --from=v0 --chain-id=shilei-qa --fees=4point -b block -y
irita query node nodes
