

https://gitlab.bianjie.ai/bsn/bsnhub

=====

*******************************************
           bsnhub
*******************************************
cd /Users/sherlock/go/src/gitlab.bianjie.ai


这个后还没有做：
git clone https://gitlab.bianjie.ai/bsn/bsnhub.git
cd bsnhub
git remote add upstream  https://gitlab.bianjie.ai/bsn/bsnhub.git
git fetch --all //此时应该Fetching origin；  Fetching upstream


更新：
cd /Users/sherlock/go/src/gitlab.bianjie.ai/bsnhub
git fetch --all
git checkout .
// git checkout master
// git checkout -b vincent-clean origin/vincent-clean
// git checkout vincent-clean  , git branch -D vincent-release
git pull
git branch && git rev-parse HEAD

===
make install


*******************************************
          用testnet 直接手动起
*******************************************

cd ~ && rm -rf .irita testnet
irita testnet --v=1 --chain-id=shilei-qa --output-dir=/Users/sherlock/testnet --node-dir-prefix=v --starting-ip-address=127.0.0.1
irita start --home=/Users/sherlock/testnet/v0/irita

iritacli tx send v0 $(iritacli keys show v0 -a) 50000point --chain-id=shilei-qa --fees=4point -b block -y
iritacli query bank balances --trust-node $(iritacli keys show v0 -a)


======================
单节点手动测试网（注意：不用testnet）
======================
创建 Genesis 文件并启动网络
rm -rf ~/testnet

1）、初始化 genesis.json 文件
irita init --home=/Users/sherlock/testnet/x1/irita --chain-id=shilei-qa x1

2）、创建一个初始化账户x1
iritacli keys add x1

3）、将x1添加到genesis.json 文件，并为该账户添加'RootAdmin'权限
irita add-genesis-account $(iritacli keys show x1 -a) 1000000000point --home=/Users/sherlock/testnet/x1/irita --root-admin

4）、导出验证节点x1(步骤1生成的)私钥为pem格式，方便用于申请节点证书
irita genkey --home=/Users/sherlock/testnet/x1/irita --out-file=/Users/sherlock/testnet/priv.pem

5）、使用步骤4中的私钥文件生成证书请求
自签证书 （大部分选项回车用默认，密码写一个）
openssl req -new -x509 -sm3 -sigopt "distid:1234567812345678" -key /Users/sherlock/testnet/priv.pem -out /Users/sherlock/testnet/cert.crt -days 365

6）、导入企业根证书
irita set-root-cert /Users/sherlock/testnet/cert.crt --home=/Users/sherlock/testnet/x1/irita

7）、添加x1到genesis.json文件 （add-genesis-validator）
irita add-genesis-validator --name=x1 --cert=/Users/sherlock/testnet/cert.crt --power=100 --home=/Users/sherlock/testnet/x1/irita --from=x1

8）、启动节点 （--pruning=nothing 所有数据都保存）
irita start --home=/Users/sherlock/testnet/x1/irita --pruning=nothing





========================================================================================================================
========================================================================================================================
================== validator ======================================================================================================
========================================================================================================================
========================================================================================================================

=====
create validator
=====
//openssl
irita init --home=/Users/sherlock/testnet/x2/irita --chain-id=shilei-qa x2
irita genkey --home=/Users/sherlock/testnet/x2/irita --out-file=/Users/sherlock/testnet/priv_x2.pem
openssl req -new -key /Users/sherlock/testnet/priv_x2.pem -out /Users/sherlock/testnet/key_x2.csr -sm3 -sigopt "distid:1234567812345678"
openssl x509 -req -in /Users/sherlock/testnet/key_x2.csr -out /Users/sherlock/testnet/key_x2.crt -sm3 -sigopt "distid:1234567812345678" -vfyopt "distid:1234567812345678" -CA /Users/sherlock/testnet/root_cert.pem -CAkey /Users/sherlock/testnet/root_key.pem -CAcreateserial

//通过cert.crt创建验证人
iritacli tx validator create --name=x2 --cert=/Users/sherlock/testnet/key_x2.crt --power=10 --description=description --from=v0 --chain-id=shilei-qa --fees=4point -b block -y


=====
query validator（s）
=====
通过name， 查询id
iritacli query validator validator --trust-node x2

通过id查询
iritacli query validator validator --trust-node $(iritacli query validator validator --trust-node x2 -o=json | jq -r .id)

查询全部
iritacli query validator list --trust-node

=====
update validator（通过id）
=====
iritacli tx validator update $(iritacli query validator validator --trust-node x2 -o=json | jq -r .id) --cert=/Users/sherlock/testnet/key_x2.crt --power=20 --from=v0 --chain-id=shilei-qa --fees=4point -b block -y

=====
remove validator（通过id）
=====
iritacli tx validator remove $(iritacli query validator validator --trust-node x2 -o=json | jq -r .id) --from=v0 --chain-id=shilei-qa --fees=4point -b block -y

=====
unjail validator（通过id）100块没有上线就会被jail
=====
iritacli tx slashing unjail $(iritacli query validator validator --trust-node x2 -o=json | jq -r .id) --from=v0 --chain-id=shilei-qa --fees=4point -b block -y

//iritacli query slashing signing-info --trust-node icp1ulx45dfpqgfamwzdrzh0e4x3l026hm39szfldq9e5z6jq7ckkmkqj4prnwwfs9f6x36
//date -u "+utc %Y-%m-%d  %H:%M:%S"


====== 按照上面步骤创建完一个validator后， 起一个全节点 ======
cp /Users/sherlock/testnet/v0/irita/config/config.toml /Users/sherlock/testnet/x2/irita/config/config.toml
cp /Users/sherlock/testnet/v0/irita/config/genesis.json /Users/sherlock/testnet/x2/irita/config/genesis.json

irita tendermint show-node-id --home=/Users/sherlock/testnet/v0/irita
复制id 到下面的seed， 下面2条顺序不能变
sed -i '' 's/2665/2666/g' /Users/sherlock/testnet/x2/irita/config/config.toml
sed -i '' 's/seeds = ""/seeds = "95e51f0e32987a19d83872aaca7d148f6484aea3@localhost:26656"/g' /Users/sherlock/testnet/x2/irita/config/config.toml

此时正常追赶， validator就算上线了， 不会被jail
irita start --home=/Users/sherlock/testnet/x2/irita
iritacli query validator list --trust-node





========================================================================================================================
========================================================================================================================
==================nft======================================================================================================
========================================================================================================================
========================================================================================================================

=====
issue denom
【注意:denom的name可以为空，不能重复】
=====

iritacli tx nft issue d01 --name="name：d01" --from=v0 --chain-id=shilei-qa --fees=4point -b block -y
iritacli tx nft issue d02 --name="name：d02" --from=v0 --chain-id=shilei-qa --fees=4point -b block -y

=====
mint 在denom下 mint token
【注意:token的name可以为空，可以重复】
=====
iritacli tx nft mint d01 a01 --recipient=$(iritacli keys show v0 --address) --name="name：d01—a01" --uri="tokenURI" --data="tokenData" --from=v0 --chain-id=shilei-qa --fees=4point -b block -y

iritacli tx nft mint d01 a02 --recipient=$(iritacli keys show v0 --address) --name="name：d01—a02" --uri="tokenURI"  --from=v0 --chain-id=shilei-qa --fees=4point -b block -y

iritacli tx nft mint d02 a01 --recipient=$(iritacli keys show v0 --address) --name="name：d02—a01" --uri="tokenURI"  --from=v0 --chain-id=shilei-qa --fees=4point -b block -y

=====
查询
=====
//demon:d01 下的nft supply总数
iritacli query nft supply --trust-node d01

//iritacli query nft owner
iritacli query nft owner --trust-node $(iritacli keys show v0 --address)

//collection
iritacli query nft collection --trust-node d01

//query denoms
iritacli query nft denoms --trust-node

//query nft
iritacli query nft token --trust-node d01 a01


=====
edit ， 必须要用owner
=====
//转给v1 一点point 50000point --chain-id=shilei-qa --fees=4point -b block -y
iritacli query bank balances --trust-node $(iritacli keys show v0 --address)
iritacli tx send v0 $(iritacli keys show v1 --address) 10000point --chain-id=shilei-qa --fees=4point -b block -y

iritacli tx nft edit d01 a01 --name="name222" --uri="uri333" --data="4444" --from=v0 --chain-id=shilei-qa --fees=4point -b block -y
iritacli query nft token --trust-node d01 a01


=====
transfer
=====
iritacli tx nft transfer $(iritacli keys show v1 --address) d01 a01 --from=v0 --chain-id=shilei-qa --fees=4point -b block -y
iritacli query nft token --trust-node d01 a01

=====
burn
=====
iritacli tx nft burn d01 a01 --from=v1 --chain-id=shilei-qa --fees=4point -b block -y
iritacli tx nft burn d01 a02 --from=v0 --chain-id=shilei-qa --fees=4point -b block -y

iritacli query nft collection --trust-node d01




================================================================================
================================================================================
oracle
================================================================================
================================================================================
cd ~ && rm -rf .irita testnet
irita testnet --v=1 --chain-id=shilei-qa --output-dir=/Users/sherlock/testnet --node-dir-prefix=v --starting-ip-address=127.0.0.1
irita start --home=/Users/sherlock/testnet/v0/irita

===
定义, 绑定
===
iritacli tx service define --chain-id=shilei-qa --from=v0 --description=service-description --author-description=author-description --tags=tag1,tag2 --schemas=/Users/sherlock/my_workspace/service/schemas.json --name=a001 --fees=4point -b block -y

iritacli tx service bind --chain-id=shilei-qa --fees=4point -b block -y  --from=v0 --deposit=20000point --pricing=/Users/sherlock/my_workspace/service/pricing.json --service-name=a001 --qos=5

===
开始
===

1. Create Feed
//创建feed的同时相当于创建了一个service call
//threshold 不能大约provider的个数
//State初始=pause
//--value-json-path="data.user.name"
//不定义create会报错， 不绑定不会报错， 但是后续request会收不到。这里要注意。
iritacli tx oracle create --chain-id=shilei-qa --from=v0 --fees=4point --description=description --latest-history=10 --service-name=a001 --input="{\"id\": \"1234\",\"name\": \"bianjie\",\"data\": \"facedata\"}" --providers=$(iritacli keys show v0 --address) --service-fee-cap=1point --timeout=20 --frequency=20 --threshold=1 --aggregate-func="avg" --value-json-path="data" --feed-name=f001 -b block -y -o=json |jq

2. Query Feed
iritacli query oracle feed --trust-node f001 -o=json | jq

3. Start Feed
//State=running
iritacli tx oracle start f001 --chain-id=shilei-qa --from=v0 --fees=4point -b block -y -o=json | jq

4. Pause Feed
//State=pause
iritacli tx oracle pause f001 --chain-id=shilei-qa --from=v0 --fees=4point -b block -y -o=json | jq

5. Update Feed
iritacli tx oracle edit f001 --chain-id=shilei-qa --from=v0 --fees=4point --latest-history=5 -b block -y -o=json | jq
// --providers=faa1r3tyupskwlh07dmhjw70frxzaaaufta37y25yr --service-fee-cap=1iritacli --timeout=5 --frequency=5 --total=-1 --threshold=1 --description  --latest-history --service-fee-cap --timeout --frequency --total --threshold

6. Query Feeds
iritacli query oracle feeds --state=running --trust-node -o=json | jq
iritacli query oracle feeds --state=paused --trust-node -o=json | jq

//直接搜出所有的
iritacli query oracle feeds --trust-node -o=json | jq

7. Query Value
iritacli query oracle value f001 --trust-node -o=json | jq

    **************
    单人响应
    **************
iritacli tx service respond --chain-id=shilei-qa --from=v0 --fees=4point --request-id=$(iritacli query service requests a001 $(iritacli keys show v0 --address) -o=json --trust-node | jq -r .[0].id) --data="{\"data\": \"100\"}" --result='{"code":200,"message":"ok"}' -b block -y -o=json | jq

iritacli query oracle value f001 --trust-node -o=json | jq


    **************
    多人响应
    **************
    //同一个call， RequestContextID是的同一个。 但是针对于不同的provider的RequestID都是不一样的， 而且同一个provider每轮的RequestID也是不一样的

//先要创建v1 recover，转账
iritacli keys add v1 --recover
figure seminar caught foster midnight cup method west brown hundred regular symptom family accuse tourist game burst audit tell foot acquire spike chair danger
// iaa1pm432kqz62mutq439ynqs87u30r36062qdw977


iritacli tx send v0 $(iritacli keys show v1 -a) 50000point --chain-id=shilei-qa --fees=4point -b block -y
iritacli query bank balances $(iritacli keys show v1 -a) --trust-node

//需要PowerUser
iritacli tx admin add-roles $(iritacli keys show v1 --address)  PowerUser --from=v0 --chain-id=shilei-qa --fees=4point -b block -y


//增加一个provider v1
iritacli tx oracle edit f001 --chain-id=shilei-qa --from=v0 --fees=4point --providers=$(iritacli keys show v0 --address),$(iritacli keys show v1 --address) -b block -y -o=json | jq

//v1也要绑定， 不绑定就不能respond
iritacli tx service bind --chain-id=shilei-qa --fees=4point -b block -y  --from=v1 --deposit=20000point --pricing=/Users/sherlock/my_workspace/service/pricing.json --service-name=a001 --qos=5

//等一会儿，到下一轮，两个都可以查到了，此条不用执行
iritacli query service requests a001 $(iritacli keys show v0 --address) --trust-node -o=json | jq
iritacli query service requests a001 $(iritacli keys show v1 --address) --trust-node -o=json | jq

//v0 ， v1 ：分别response 1次，共2次
iritacli tx service respond --chain-id=shilei-qa --from=v0 --fees=4point --request-id=$(iritacli query service requests a001 $(iritacli keys show v0 --address) -o=json --trust-node | jq -r .[0].id) --data="{\"data\": \"100\"}" --result='{"code":200,"message":"ok"}' -b block -y

iritacli tx service respond --chain-id=shilei-qa --from=v1 --fees=4point --request-id=$(iritacli query service requests a001 $(iritacli keys show v1 --address) -o=json --trust-node | jq -r .[0].id) --data="{\"data\": \"200\"}" --result='{"code":200,"message":"ok"}' -b block -y

//查询结果，等到一轮timeout以后出结果， 如果出现150就说明成功了，取了2个的均值。
iritacli query oracle value f001 --trust-node -o=json | jq
