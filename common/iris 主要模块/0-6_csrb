*******************************************
           csrb
*******************************************
cd /Users/sherlock/go/src/gitlab.bianjie.ai


这个后还没有做：
git clone https://gitlab.bianjie.ai/csrb/csrb.git
cd csrb
git remote add upstream  https://gitlab.bianjie.ai/csrb/csrb.git
git fetch --all //此时应该Fetching origin；  Fetching upstream


更新：
cd /Users/sherlock/go/src/gitlab.bianjie.ai/csrb
git fetch --all
git checkout .
// git checkout master
                                          // git checkout -b vincent-clean origin/vincent-clean
// git checkout vincent-clean
// git pull
git merge origin/master
git branch && git rev-parse HEAD

===
make install

*******************************************
          用testnet 直接手动起
*******************************************

cd ~ && rm -rf .csrbcli .csrb testnet
csrb testnet --v=1 --chain-id=shilei-qa --output-dir=/Users/sherlock/testnet --node-dir-prefix=v --starting-ip-address=127.0.0.1
csrb start --home=/Users/sherlock/testnet/v0/csrb

csrbcli keys add v1 --recover
caught below output final blast sun elevator labor regular palm dizzy stand arctic judge cost typical confirm people dust panic still aspect sword save
address: csrb1lcuw6ewd2gfxap37sejewmta205sgssm7rvda5


csrbcli tx send v0 csrb1lcuw6ewd2gfxap37sejewmta205sgssm7rvda5 50000point --chain-id=shilei-qa --fees=4point -b block -y


=====================================================================================================================
=====================================================================================================================
======    asset ====================================================================================================
=====================================================================================================================
=====================================================================================================================

**********************
发行资产：
3位资产 30万 40%入tax， 60%burn
**********************
echo y | csrbcli tx token issue --name=token-name --min-unit="mu01" --scale=18 --initial-supply=10000 --max-supply=30000 --mintable=true  --from=v0 --chain-id=shilei-qa --fees=4point -b block -y --symbol=a01

csrbcli tx send v0 csrb1lcuw6ewd2gfxap37sejewmta205sgssm7rvda5 1mu01 --chain-id=shilei-qa --fees=4point -b block -y
csrbcli query account --trust-node csrb1lcuw6ewd2gfxap37sejewmta205sgssm7rvda5
csrbcli query bank balances --trust-node csrb1lcuw6ewd2gfxap37sejewmta205sgssm7rvda5
csrbcli query bank total --trust-node

echo y | csrbcli tx token issue --name=token-name --min-unit="mu02" --scale=18 --initial-supply=10000 --max-supply=30000 --mintable=true  --from=v0 --chain-id=shilei-qa --fees=4point -b block -y --symbol=a02



======================
查询资产：
======================
//查询目前所有tokens
csrbcli query token tokens --trust-node

//查询单个
csrbcli query token token --trust-node a01

//查询指定 owner 的全部资产：(gateway资产不会被查询)
csrbcli query token tokens --trust-node $(csrbcli keys show v0 --address)



======================
修改资产：
======================
csrbcli tx token edit a01 --name="Cat" --max-supply=99999 --mintable=true --from=v0 --chain-id=shilei-qa --fees=4point -b block -y
csrbcli query token token a01


======================
增发资产：
======================
echo y | csrbcli tx token mint a01 --amount=1 --to=csrb1lcuw6ewd2gfxap37sejewmta205sgssm7rvda5 --from=v0 --chain-id=shilei-qa --fees=4point -b block -y
csrbcli query bank balances --trust-node csrb1lcuw6ewd2gfxap37sejewmta205sgssm7rvda5


======================
转让asset：
======================
csrbcli tx token transfer a01 --to=csrb1lcuw6ewd2gfxap37sejewmta205sgssm7rvda5 --from=v0 --chain-id=shilei-qa --fees=4point -b block -y
csrbcli query token tokens  --trust-node $(csrbcli keys show v1 --address)


======================
查询fee：
======================
csrbcli query token fee --trust-node a01


========================================================================================================================
========================================================================================================================
==================record======================================================================================================
========================================================================================================================
========================================================================================================================

1. [交易] 提交存证
// --description="hahaha" --onchain-data="shelwin flighting"
csrbcli tx record create --chain-id=shilei-qa "hahaha" "flighting" --from=v0 --fees=4point -b block -y --meta="metadata" --uri="uridata"

2. 查询存证
csrbcli query record record --trust-node 9cc753a810a270f996609811cff5e77318612e43aeab2b482d1c630aa1e27971 -o=json --indent





========================================================================================================================
========================================================================================================================
==================service===============================================================================================
========================================================================================================================
========================================================================================================================

     ===========================
                定义
     ===========================
1. 服务定义
csrbcli tx service define --chain-id=shilei-qa --from=v0 --description=service-description --author-description=author-description --tags=tag1,tag2 --schemas=/Users/sherlock/my_workspace/service/schemas.json --name=a001 --fees=4point -b block -y

2. 服务定义查询 （可以查询 method id）
csrbcli query service definition a001 --trust-node

3. 查询 schema
csrbcli query service schema pricing --trust-node
csrbcli query service schema result --trust-node


     ===========================
                绑定
     ===========================
3. 服务绑定
csrbcli tx service bind --chain-id=shilei-qa --fees=4point -b block -y --from=v0 --deposit=20000point --pricing=/Users/sherlock/my_workspace/service/pricing.json --service-name=a001 --qos=5

csrbcli tx service bind --chain-id=shilei-qa --fees=4point -b block -y --from=v0 --deposit=20000point --pricing=/Users/sherlock/my_workspace/service/pricing.json --service-name=a001 --qos=6  --provider=csrb1lcuw6ewd2gfxap37sejewmta205sgssm7rvda5



csrbcli tx send v0 csrb1lcuw6ewd2gfxap37sejewmta205sgssm7rvda5 50000point --chain-id=shilei-qa --fees=4point -b block -y
csrbcli tx service bind --chain-id=shilei-qa --fees=4point -b block -y --from=v1 --deposit=20000point --pricing=/Users/sherlock/my_workspace/service/pricing.json --service-name=a001 --qos=6 --provider=csrb185d9dvu6sdc6yvxxf9cx5jl4g9yvpmn5pmq48g


4. 查询服务绑定
csrbcli query service binding --trust-node a001 $(csrbcli keys show v0 --address)
csrbcli query service bindings --trust-node a001
csrbcli query service bindings --trust-node a001 --owner=$(csrbcli keys show v0 --address)


5. 更新绑定 --min-resp-time（qos）也可以改
csrbcli tx service update-binding a001 $(csrbcli keys show v0 --address) --chain-id=shilei-qa --from=v0 --fees=4point -b block -y --deposit=2point --pricing=/Users/sherlock/my_workspace/service/pricing.json --qos=8

csrbcli tx service update-binding a001 csrb1lcuw6ewd2gfxap37sejewmta205sgssm7rvda5 --chain-id=shilei-qa --from=v0 --fees=4point -b block -y --deposit=2point --pricing=/Users/sherlock/my_workspace/service/pricing.json --qos=9

6. 设置提取地址
csrbcli tx service set-withdraw-addr --chain-id=shilei-qa --from=v0 --fees=4point -b block -y csrb1lcuw6ewd2gfxap37sejewmta205sgssm7rvda5

//查询提取地址
csrbcli query service withdraw-addr $(csrbcli keys show v0 --address) --trust-node

7.服务失效
csrbcli tx service disable a001 $(csrbcli keys show v0 --address) --chain-id=shilei-qa --from=v0 --fees=4point -b block -y

8.服务恢复 ，可以增加抵押
csrbcli tx service enable a001 $(csrbcli keys show v0 --address) --chain-id=shilei-qa --from=v0 --fees=4point -b block -y --deposit=1point

9. 取回抵押 (滞后 COMPLAINT_RETROSPECT (Gov) + ARBITRATION_TIMELIMIT (Gov)) 、、这个还没有测
csrbcli tx service refund-deposit a001 --chain-id=shilei-qa --from=v0 --fees=4point -b block -y

     ===========================
      service 调用
     ===========================

1. 服务调用
1）批量请求
//单个
csrbcli tx service call --chain-id=shilei-qa --from=v0 --fees=4point -b block -y --service-name=a001  --timeout=20 --service-fee-cap=1point --data="{\"id\": \"1234\",\"name\": \"bianjie\",\"data\": \"facedata\"}" --providers=$(csrbcli keys show v0 --address)

//重复
csrbcli tx service call --chain-id=shilei-qa --from=v0 --fees=4point -b block -y --service-name=a001 --service-fee-cap=1point --data="{\"id\": \"1234\",\"name\": \"bianjie\",\"data\": \"facedata\"}" --providers=$(csrbcli keys show v0 --address) --timeout=20 --repeated --frequency=20 --total=-1

查询请求列表
//如果查不到 可能是price低了，可能是min-resp-time没满足bind是
csrbcli query service requests a001 $(csrbcli keys show v0 --address) --trust-node -o=json --indent


根据上一条返回的id
csrbcli query service request -o=json --indent --trust-node CBDD43F4043ABA9C1943DF705381B1DD6084EB9D5DE7FFBC5169D568E84ADC2C000000000000000000000000000000010000000000000EE80000

//用<request-context-id>超时后可以查到 ， requests只能查询到当前活跃的
csrbcli query service request-context --trust-node -o=json --indent $(csrbcli query service requests --trust-node  a001 $(csrbcli keys show v0 --address) -o=json | jq -r .[0].request_context_id)

csrbcli query service requests -o=json --indent --trust-node 5E39BED0BE6B538B7785B87BBB7CB0D163FE5C05326AB5CFC0EBFEEF36C9245B0000000000000000 1
csrbcli query service request-context --trust-node 3997F45F9F07998F088CB963519885DE82D063A7603AEC4C9C638C89762BB0F30000000000000000 -o=json --indent

3.相应请求
csrbcli tx service respond --chain-id=shilei-qa --from=v0  --fees=4point -b block -y  --data="{\"data\": \"userdata\"}" --result='{"code":200,"message":"it500"}' --request-id=$(csrbcli query service requests --trust-node  a001 $(csrbcli keys show v0 --address) -o=json | jq -r .[0].id)

4.查询相应请求 ，用"3）"返回request id
csrbcli query service response -o=json  --trust-node D387B86114C3D7FE88129F2E635BD22A57B2C2FD050D869694628E839812E6A30000000000000000000000000000000F00000000000001440000
//注意此时马上再查 request id 就是空了 csrbcli query service requests --trust-node  a001 $(csrbcli keys show v0 --address) -o=json | jq -r .[0].id


     ===========================
       取回服务调用产生的服务费（卖家），未响应超时的服务费会自动退还给（买家）
     ===========================
1.查询服务费
csrbcli query service fees --trust-node $(csrbcli keys show v0 --address)


2.提取服务调用产生的服务费
csrbcli tx service withdraw-fees --chain-id=shilei-qa --from=v0 --fees=4point -b block -y

csrbcli tx service withdraw-fees $(csrbcli keys show v0 --address) --chain-id=shilei-qa --from=v0 --fees=4point -b block -y

csrbcli query bank balances --trust-node csrb1lcuw6ewd2gfxap37sejewmta205sgssm7rvda5

3.注意 irita 没有 withdraw-tax

     ===========================
      请求上下文相关 ====》》》  测下 nftlcd 的bug 下载一个新的
     ===========================
1. 查询请求上下文 <request-context-id>， 返回这个call的很多字段信息
csrbcli query service request-context --trust-node -o=json --indent $(csrbcli query service requests --trust-node  a001 $(csrbcli keys show v0 --address) -o=json | jq -r .[0].request_context_id)

//查询request id
csrbcli query service requests a001 --trust-node $(csrbcli keys show v0 --address) -o=json --indent

2. 暂停请求上下文
csrbcli tx service pause --chain-id=shilei-qa --from=v0  --fees=4point -b block -y $(csrbcli query service requests --trust-node a001 $(csrbcli keys show v0 --address) -o=json | jq -r .[0].request_context_id)

3. 启动请求上下文
//state变成running , BatchState在complete状态也会变running
csrbcli tx service start --chain-id=shilei-qa --from=v0 --fees=4point -b block -y $(csrbcli query service requests --trust-node a001 $(csrbcli keys show v0 --address) -o=json | jq -r .[0].request_context_id)

4. 更新请求上下文
csrbcli tx service update --chain-id=shilei-qa --from=v0 --fees=4point -b block -y  --timeout=22 --frequency=22 --total=3000 $(csrbcli query service requests --trust-node a001 $(csrbcli keys show v0 --address) -o=json | jq -r .[0].request_context_id)

5. 终止请求上下文
// state变成complete
// 非repeated 不能kill
csrbcli tx service kill --chain-id=shilei-qa --from=v0 --fees=4point -b block -y  423992EA3EA10E4F168A2832C40CFEC6A4DF710C67C418368D4C8D0AB25776FB0000000000000000

6. 查询请求上下文的请求列表 （注意价格不到的请求是会被过滤掉）
//列表只有有效的才会被查出， 但是iriscli service request-context 永远能查出）
csrbcli query service request-context --trust-node 423992EA3EA10E4F168A2832C40CFEC6A4DF710C67C418368D4C8D0AB25776FB0000000000000000

7. 查询请求上下文的响应列表（后面是request id）
//注意这个只能查活跃的 ， 过期的查不到。
csrbcli query service response C9F4EA3442E1CB86980CD9FA46A2AFAA7805821FF74F68903D8E28D8707FFFA70000000000000000000000000000001E00000000000002FE0000 -o=json
csrbcli query service responses <request-context-id> <batch-counter>


========================================================================================================================
========================================================================================================================
==================admin======================================================================================================
========================================================================================================================
========================================================================================================================


=====
create validator
=====
csrbcli tx validator create --name=x1 --pubkey=csrbvalconspub1ulx45dfpqzqpq5d37d8jd954986e2up4haetthnqacywlu2pu6ecsfn75yq667fa3er --power=10 --details=details --from=v0 --chain-id=shilei-qa --fees=4point -b block -y

=====
query validator
=====
csrbcli query validator validator --trust-node x1


=====
update validator
=====
csrbcli tx validator update x1 --pubkey=csrbvalconspub1ulx45dfpqzqpq5d37d8jd954986e2up4haetthnqacywlu2pu6ecsfn75yq667fa3er --power=20 --from=v0 --chain-id=shilei-qa --fees=4point -b block -y

=====
remove validator
=====
csrbcli tx validator remove x1 --from=v0 --chain-id=shilei-qa --fees=4point -b block -y


=====
unjail validator 没测
=====
csrbcli tx validator unjail [name]

=====
query validator
=====
csrbcli query validator query --trust-node x1

=====
query validators
=====
csrbcli q validator list --trust-node


====== 起一个全节点 ======

rm -rf /Users/sherlock/testnet/v1
csrb init --home=/Users/sherlock/testnet/v1/csrb --chain-id=shilei-qa x1

cp /Users/sherlock/testnet/v0/csrb/config/config.toml /Users/sherlock/testnet/v1/csrb/config/config.toml
cp /Users/sherlock/testnet/v0/csrb/config/genesis.json /Users/sherlock/testnet/v1/csrb/config/genesis.json

csrb tendermint show-node-id --home=/Users/sherlock/testnet/v0/csrb
复制id 到下面的seed， 下面2条顺序不能变
sed -i '' 's/2665/2666/g' /Users/sherlock/testnet/v1/csrb/config/config.toml
sed -i '' 's/seeds = ""/seeds = "05288983543877612541cf4a92e351a0fdd97eac@localhost:26656"/g' /Users/sherlock/testnet/v1/csrb/config/config.toml

此时正常追赶
csrb start --home=/Users/sherlock/testnet/v1/csrb

新建一个页面,创建validator
csrbcli tx validator create --name=x1 --pubkey=$(csrb tendermint show-validator --home=/Users/sherlock/testnet/v1/csrb) --power=10 --details=details --from=v0 --chain-id=shilei-qa --fees=4point -b block -y

查询
csrbcli query validator validator --trust-node x1



================================

========================================================================================================================
========================================================================================================================
==================修改参数======================================================================================================
========================================================================================================================
========================================================================================================================



csrbcli tx params update /Users/sherlock/my_workspace/service/param.json --from=v0 --chain-id=shilei-qa --fees=4point -b block -y



========================================================================================================================
========================================================================================================================
==================nft======================================================================================================
========================================================================================================================
========================================================================================================================



cd ~ && rm -rf .csrbcli .csrb testnet
csrb testnet --v=1 --chain-id=shilei-qa --output-dir=/Users/sherlock/testnet --node-dir-prefix=v --starting-ip-address=127.0.0.1
csrb start --home=/Users/sherlock/testnet/v0/csrb



=====

https://gitlab.bianjie.ai/irita/spec/blob/v1.0/nft/README.md

csrbcli keys show v0
csrb1pl43apkxexct4jgwv29mrlkqdj4me59sd0xn99

csrbcli keys add v1 --recover
caught below output final blast sun elevator labor regular palm dizzy stand arctic judge cost typical confirm people dust panic still aspect sword save
csrb1lcuw6ewd2gfxap37sejewmta205sgssm7rvda5


=====
issue denom
=====
csrbcli tx nft issue d01 --from=v0 --chain-id=shilei-qa --fees=4point -b block -y
csrbcli tx nft issue d02 --from=v0 --chain-id=shilei-qa --fees=4point -b block -y

=====
mint
=====
csrbcli tx nft mint d01 a01 --recipient=$(csrbcli keys show v0 --address) --token-uri="tokenURI" --token-data="tokenData" --from=v0 --chain-id=shilei-qa --fees=4point -b block -y

csrbcli tx nft mint d01 a02 --recipient=$(csrbcli keys show v0 --address) --token-uri="tokenURI"  --from=v0 --chain-id=shilei-qa --fees=4point -b block -y

csrbcli tx nft mint d02 a01 --recipient=csrb1pl43apkxexct4jgwv29mrlkqdj4me59sd0xn99 --token-uri="tokenURI"  --from=v0 --chain-id=shilei-qa --fees=4point -b block -y

=====
查询
=====
//demon:d01 下的nft supply总数
csrbcli query nft supply --trust-node d01

//csrbcli query nft owner
csrbcli query nft owner --trust-node $(csrbcli keys show v0 --address)

//collection
csrbcli query nft collection --trust-node d01

//query denoms
csrbcli query nft denoms --trust-node

//query nft
csrbcli query nft token --trust-node d01 a01


=====
edit ， 必须要用owner
=====
//转给v1 一点point 50000point --chain-id=shilei-qa --fees=4point -b block -y
csrbcli query bank balances --trust-node $(csrbcli keys show v0 --address)
csrbcli tx send v0 $(csrbcli keys show v1 --address) 10000point --chain-id=shilei-qa --fees=4point -b block -y

csrbcli tx nft edit d01 a01 --token-uri="tokenURI2" --from=v0 --chain-id=shilei-qa --fees=4point -b block -y
csrbcli query nft token --trust-node d01 a01


=====
transfer
=====
csrbcli tx nft transfer $(csrbcli keys show v1 --address) d01 a01 --from=v0 --chain-id=shilei-qa --fees=4point -b block -y
csrbcli query nft token --trust-node d01 a01

=====
burn
=====
csrbcli tx nft burn d01 a01 --from=v0 --chain-id=shilei-qa --fees=4point -b block -y
csrbcli tx nft burn d01 a02 --from=v0 --chain-id=shilei-qa --fees=4point -b block -y

csrbcli query nft collection --trust-node d01



========================================================================================================================
========================================================================================================================
================== init gentx  起链 ======================================================================================================
========================================================================================================================
========================================================================================================================
cd ~ && rm -rf .csrbcli .csrb testnet
csrb init --home=/Users/sherlock/testnet/v0/csrb --chain-id=shilei-qa v0
csrb init --home=/Users/sherlock/testnet/v1/csrb --chain-id=shilei-qa v1
csrb gentx --home=/Users/sherlock/testnet/v0/csrb --name=v0
csrb gentx --home=/Users/sherlock/testnet/v1/csrb --name=v1
copy v1的gentx里的文件 -》 v0


csrb add-genesis-account $(csrbcli keys show v0 --address) 100000000point --home=/Users/sherlock/testnet/v0/csrb
csrb add-genesis-account $(csrbcli keys show v1 --address) 100000000point --home=/Users/sherlock/testnet/v0/csrb
csrb collect-gentxs --home=/Users/sherlock/testnet/v0/csrb
copy v0的gennesis toml文件 -》 v1

csrb tendermint show-node-id --home=/Users/sherlock/testnet/v0/csrb
修改v1的toml 26657=》26687 3个，replace 2665 =》 2666
seeds = "375b8c804ae1dafea68124dc0d2ee90ae35daccf@localhost:26656"

csrb start --home=/Users/sherlock/testnet/v0/csrb
csrb start --home=/Users/sherlock/testnet/v1/csrb

验证：
csrbcli query bank balances --trust-node $(csrbcli keys show v0 --address)
csrbcli query bank balances --trust-node $(csrbcli keys show v1 --address)


========================================================================================================================
========================================================================================================================
================== csrbwallet ======================================================================================================
========================================================================================================================
========================================================================================================================
cd /Users/sherlock/testnet && rm -rf /Users/sherlock/testnet/keyring-file
//8位密码 ，记得要复制助记词
csrbwallet init --home=/Users/sherlock/testnet
csrbwallet update --home=/Users/sherlock/testnet
csrbwallet keys create v0 --home=/Users/sherlock/testnet
csrbwallet keys show v0 --home=/Users/sherlock/testnet
csrbwallet keys list --home=/Users/sherlock/testnet
//注意：保存随机密码，import用
csrbwallet keys export v0 --home=/Users/sherlock/testnet
csrbcli keys import x0 /Users/sherlock/testnet/v0.key
csrbcli keys show x0

