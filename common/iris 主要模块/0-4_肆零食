重复的service：
iriscli service requests 查询的时候：没有把已经kill掉context过滤掉。 查询的数组前几个都是空的数据组合（faa108w3x8）




service、coinswap issue 补充：

缺陷：
1）genesis export 有问题，oracle无法恢复 （等修复后再测）
2）GET /coinswap/liquidities/{voucher-coin-name} 查询流动性 不可用错误 （最新版本，已修复）
3）iriscli service call -h 中 "-timeout=100" 缺少了一个横杠

改进：
1）service bind spec 中 json例子有错误，多了一个逗号，导致bind时报错
{
    "volume": 10000,
    "discount": "0.5"
},



        

service/asset 复测后，发现的新issue 。￼￼￼@程文席  @张志强  @苏海伟

严重缺陷:
1) oracle服务 'pause'后重新'start' feed ，服务无法正常恢复。

缺陷:
1) iriscli oracle query-feed 仍然存在 RepeatedTotal 字段，  该字段已经在创建oracle的时候被删除。
2）POST /asset/tokens 无论 "decimal" 设置任何数字，  构造交易的时候都会变成0.

====
random 测试issue

缺陷
1、lcd： POST /rand/rands  Request a random number 测试未通过

改进
1、需要在gitlab的spec补充关于block-interval的说明

@霍达   random补充 ：
 iriscli rand query-queue 中 cli返回的txhash是hex编码，  lcd中查询返回的base64， 需统一。

===========================================================================================================================================================================
===========================================================================================================================================================================
===========================================================================================================================================================================
@苏海伟  0.17 service issue的补充。@程文席

缺陷：
1）internal-spec /params/params.md 未及时更新service参数取值范围，和添加新参数。
例如：
    a. MaxRequestTimeoutParameter [20,)  实际提交参数超出这个范围，不报错。
    b. 未见MinDeposit等参数。
2）查询service/binding时，"disabled_time"字段的`cli返回`和`json api返回`的默认值不一致，cli是""，api是"0001-01-01T00:00:00Z"

改进：
1）目前新service的genesis导出还存在逻辑改进的空间， 现在导出genesis会造成所有definition，binding丢失， oracle那边逻辑就无意义了， 开发可以就此问题商讨一个合理解决方案。
2）目前genesis会export出所有request-context， 很多已经完成（completed）也导出了。 特别注意到export把某一个context所有的批次request根据BatchCounter都导出了，会造成genesis异常庞大，这个应该也是不合理的，特别是repeated的针对request。
3） slash过多下线的问题



===========================================================================================================================================================================

做了一些极限测试，发现service在slash这块设计上可能有点的漏洞。

考虑如下情况：
某服务， 最低抵押金额10000，  provider初次binding抵押12000（预留2000iris）

由于"网络"限制等种种原因， 供应商无法在一个区块（5s）内响应服务。 此时，某恶意消费者发起timeout=1的循环请求，每5秒损失0.1%，简单计算可知，该服务将在15分钟后被slash下线，并损失2000iris。
【 参考: 0.999^(180块)*12000iris <10000iris】

如果这个恶意消费者抓住这个漏洞，连续发起多批次repeat请求， 则该服务将会在几秒钟之内被攻击下线，并损失2000iris。


===========================================================================================================================================================================

缺陷：
1）程序实际参数和spec文档不一致。
feed name
--creator            实际不使用
--repeated-frequency 实际frequency
--repeated-total     实际total
--response-threshold   实际threshold

2) oracle create
a. 检测到feed-name非法后error message不正确， 无论何种非法都提示："长度不能超过70." 具体做法修改可参考，service define
b. description参数超过上限后，返回的error message有乱码。 "%!d(MISSING)"

3）oracle edit
--feed-name 改成<feed-name> 后， -help中flag : "--feed-name string         The unique identifier of the feed"未同步修改

另外，service 仍然存在 0iris，签名失败的bug。@程文席
4）echo 1234567890 | iriscli service enable a001 --chain-id=shilei-qa --from=v0 --fee=0.004iris --commit --deposit=0iris
  ERROR: {"codespace":"sdk","code":4,"message":"signature verification failed"}


@张志强
oracle issue补充

缺陷：
1）LatestHistory 无法通过 oracle edit 修改回 1 。 （除首次create的时候可以定义为1 以外。）

2) oracle edit 没有拦截 time-out=0的情况， 实际交易会成功，但是参数不会被修改。 (作为参考：oracle create 遇到timeout=0会报错。)

3）订阅过程中，中断huobi订阅服务，再重启，会导致response的交易invalid。目前尚不知是iservice-demo的问题,还是oracle/service这里的问题导致的，请开发排查。@程文席
查询block-result提示:
 {\"codespace\":\"service\",\"code\":120,\"message\":\"invalid response: request is not active\"}"

4）目前看来，oracle在承受压力测试方面还有些问题， 多个feed外加中断等操作就会导致oracle不工作，具体原因还在测。
===========================================================================================================================================================================
oracle issue补充

缺陷：
1）在一个timeout区块时段中，连续执行 pause feed 和 start feed 操作 ，会导致request/response逻辑错误， 凭空会多出request和response请求。应该是pause的时候逻辑处理有瑕疵。

2）消费者错误的降低最高服务价格后（<绑定价格，服务终止）， 此后消费者重新修改并提高服务价格后(>绑定价格)，仍然无法重新获得服务!此处需要修复。

3) oracle edit 修改Response Threshold > provider数量时，不拦截不报错。 (作为参考：create时会拦截。) 实际上这个threshold 完全不能被修改。

4）ServiceFeeCap 在"oracle"和"service"查询的结果返回格式不一致。
service request-context 返回 ServiceFeeCap: 1iris
oracle query-feed 返回 ServiceFeeCap: 1000000000000000000iris-atto


改进
1）希望iservice能有log输出， 把监听情况，response的情况都输出来，便于测试。



===========================================================================================================================================================================
===========================================================================================================================================================================
===========================================================================================================================================================================
===========================================================================================================================================================================
===========================================================================================================================================================================
===========================================================================================================================================================================
===========================================================================================================================================================================
===========================================================================================================================================================================
===========================================================================================================================================================================
===========================================================================================================================================================================
===========================================================================================================================================================================
===========================================================================================================================================================================




--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------

**Describe the bug**
**To Reproduce**
-------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------
gas损失较大 "gas_used": "63801",


rest 地址有问题

{
  "tx": {
    "msg": [
      {
        "type": "cosmos-sdk/StdTx",
        "value": {
          "inputs": [
            {
              "address": "faa1lcuw6ewd2gfxap37sejewmta205sgssmv5fnju",
              "coins": [
                {
                  "denom": "stake",
                  "amount": "1"
                }
              ]
            }
          ],
          "outputs": [
            {
              "address": "faa1lcuw6ewd2gfxap37sejewmta205sgssmv5fnju",
              "coins": [
                {
                  "denom": "stake",
                  "amount": "1"
                }
              ]
            }
          ]
        }
      }
    ],
    "fee": {
      "amount": [
        {
          "denom": "stake",
          "amount": "4"
        }
      ],
      "gas": "20000"
    },
    "signatures": [
      {
        "pub_key": {
          "type": "tendermint/PubKeySecp256k1",
          "value": "AkQeeR40fJhMFkBmh8e/+jcOGYvMOO50YE4trqzaSJ5v"
        },
        "signature": "eI92wvJi7+NGu7Ko/e0R7FgJiWooCmPoIZNKsGPxJjBE447k0MLocgLlVA/8D1NYACu6VOPMFlpvSQFCaSR9zQ==",
        "account_number": "6",
        "sequence": "0"
      }
    ],
    "memo": ""
  },
  "mode": "block"
}
会报panic

---
查询错误的tx 会panic

-------------------------------------------------------------------------------------



[p2]Should add a length limit to the Secret field in `htlc create`
**To Reproduce**
echo 1234567890 | iriscli htlc create --from=v0 --to=faa1lcuw6ewd2gfxap37sejewmta205sgssmv5fnju  --amount=15iris --time-lock=50 --timestamp=1580000000 --secret=00 --receiver-on-other-chain=00 --fee=0.3iris --chain-id=shilei-qa --commit


============== raw bug ================
============== raw bug ================
============== raw bug ================
@奚海峰  @程文席

v0.16.0-dev coinswap提测已经完成
共计10处bug, 另重新reopen一处已关闭bug(coinswap会重新触发)。

[p1] "ProposalBlock Invalid" is observed after starting a new chain from exported genesis
https://github.com/irisnet/irishub/issues/1960



============== raw bug ================
============== raw bug ================
sherlock$ iritacli tx wasm instantiate 1 "$INIT" --from node0 --amount=50000stake  -y -b block --chain-id test
panic: invalid character ',' looking for beginning of value

goroutine 1 [running]:
github.com/cosmos/cosmos-sdk/types.MustSortJSON(...)
	/Users/sherlock/go/pkg/mod/github.com/bianjieai/cosmos-sdk@v0.38.2-0.20200220072449-d2be7ab1931e/types/utils.go:40
github.com/bianjieai/irita/modules/wasm/internal/types.MsgInstantiateContract.GetSignBytes(0xc000ec85c0, 0x14, 0x20, 0x1, 0x5896478, 0x0, 0x0, 0xc000edc700, 0x1, 0x1, ...)


===================
===================
===================



