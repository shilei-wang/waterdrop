

====


===========================================================================================================================================================================
===========================================================================================================================================================================
===========================================================================================================================================================================
@苏海伟  0.17 service issue的补充。@程文席

缺陷：
1）internal-spec /params/params.md 未及时更新service参数取值范围，和添加新参数。
例如：
    a. MaxRequestTimeoutParameter [20,)  实际提交参数超出这个范围，不报错。
    b. 未见MinDeposit等参数。
2）查询service/binding时，"disabled_time"字段的`cli返回`和`json api返回`的默认值不一致，cli是""，api是"0001-01-01T00:00:00Z"

改进：
1）目前新service的genesis导出还存在逻辑改进的空间， 现在导出genesis会造成所有definition，binding丢失， oracle那边逻辑就无意义了， 开发可以就此问题商讨一个合理解决方案。
2）目前genesis会export出所有request-context， 很多已经完成（completed）也导出了。 特别注意到export把某一个context所有的批次request根据BatchCounter都导出了，会造成genesis异常庞大，这个应该也是不合理的，特别是repeated的针对request。
3） slash过多下线的问题

===========================================================================================================================================================================

做了一些极限测试，发现service在slash这块设计上可能有点的漏洞。

考虑如下情况：
某服务， 最低抵押金额10000，  provider初次binding抵押12000（预留2000iris）

由于"网络"限制等种种原因， 供应商无法在一个区块（5s）内响应服务。 此时，某恶意消费者发起timeout=1的循环请求，每5秒损失0.1%，简单计算可知，该服务将在15分钟后被slash下线，并损失2000iris。
【 参考: 0.999^(180块)*12000iris <10000iris】

如果这个恶意消费者抓住这个漏洞，连续发起多批次repeat请求， 则该服务将会在几秒钟之内被攻击下线，并损失2000iris。


===========================================================================================================================================================================
===========================================================================================================================================================================
===========================================================================================================================================================================
===========================================================================================================================================================================
===========================================================================================================================================================================
===========================================================================================================================================================================
===========================================================================================================================================================================
===========================================================================================================================================================================
===========================================================================================================================================================================
===========================================================================================================================================================================
===========================================================================================================================================================================
===========================================================================================================================================================================
===========================================================================================================================================================================
===========================================================================================================================================================================




--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------

**Describe the bug**
**To Reproduce**
-------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------
gas损失较大 "gas_used": "63801",


rest 地址有问题

{
  "tx": {
    "msg": [
      {
        "type": "cosmos-sdk/StdTx",
        "value": {
          "inputs": [
            {
              "address": "faa1lcuw6ewd2gfxap37sejewmta205sgssmv5fnju",
              "coins": [
                {
                  "denom": "stake",
                  "amount": "1"
                }
              ]
            }
          ],
          "outputs": [
            {
              "address": "faa1lcuw6ewd2gfxap37sejewmta205sgssmv5fnju",
              "coins": [
                {
                  "denom": "stake",
                  "amount": "1"
                }
              ]
            }
          ]
        }
      }
    ],
    "fee": {
      "amount": [
        {
          "denom": "stake",
          "amount": "4"
        }
      ],
      "gas": "20000"
    },
    "signatures": [
      {
        "pub_key": {
          "type": "tendermint/PubKeySecp256k1",
          "value": "AkQeeR40fJhMFkBmh8e/+jcOGYvMOO50YE4trqzaSJ5v"
        },
        "signature": "eI92wvJi7+NGu7Ko/e0R7FgJiWooCmPoIZNKsGPxJjBE447k0MLocgLlVA/8D1NYACu6VOPMFlpvSQFCaSR9zQ==",
        "account_number": "6",
        "sequence": "0"
      }
    ],
    "memo": ""
  },
  "mode": "block"
}
会报panic

---
查询错误的tx 会panic

-------------------------------------------------------------------------------------



[p2]Should add a length limit to the Secret field in `htlc create`
**To Reproduce**
echo 1234567890 | iriscli htlc create --from=v0 --to=faa1lcuw6ewd2gfxap37sejewmta205sgssmv5fnju  --amount=15iris --time-lock=50 --timestamp=1580000000 --secret=00 --receiver-on-other-chain=00 --fee=0.3iris --chain-id=shilei-qa --commit


============== raw bug ================
============== raw bug ================
============== raw bug ================
@奚海峰  @程文席

v0.16.0-dev coinswap提测已经完成
共计10处bug, 另重新reopen一处已关闭bug(coinswap会重新触发)。

[p1] "ProposalBlock Invalid" is observed after starting a new chain from exported genesis
https://github.com/irisnet/irishub/issues/1960



============== raw bug ================
============== raw bug ================
sherlock$ iritacli tx wasm instantiate 1 "$INIT" --from node0 --amount=50000stake  -y -b block --chain-id test
panic: invalid character ',' looking for beginning of value

goroutine 1 [running]:
github.com/cosmos/cosmos-sdk/types.MustSortJSON(...)
	/Users/sherlock/go/pkg/mod/github.com/bianjieai/cosmos-sdk@v0.38.2-0.20200220072449-d2be7ab1931e/types/utils.go:40
github.com/bianjieai/irita/modules/wasm/internal/types.MsgInstantiateContract.GetSignBytes(0xc000ec85c0, 0x14, 0x20, 0x1, 0x5896478, 0x0, 0x0, 0xc000edc700, 0x1, 0x1, ...)


===================
===================
===================



