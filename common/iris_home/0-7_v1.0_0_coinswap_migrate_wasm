
----------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------
------  coinswap  ----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------

====
coinswap客户端下载
====
cd /Users/sherlock/go/src/github.com/coinswap
git fetch --all
git checkout .
git pull

【特别重要!】
3个(10.1.4.179)ip 要改成自己的ip 10.1.4.24
chainid也要改一下，VUE_APP_HUB_CHAIN_ID=qa-test

yarn install

cd /Users/sherlock/go/src/github.com/coinswap
yarn serve

访问
http://10.1.4.24:8081/


====
irishub 配置要改3个部分才能用 coinswap
====

rm -rf /Users/sherlock/.iris
iris init testing --chain-id=qa-test
iris add-genesis-account $(iris keys show v0 -a) 100000000000000uiris
iris gentx v0 --chain-id=qa-test --amount 100000000uiris
sed -i '' 's/stake/uiris/g' /Users/sherlock/.iris/config/genesis.json
sed -i '' 's/"profilers": \[\]/"profilers": \[{"description":"test","account_type":0,"address":"iaa1cdq70u5cpczvyt2py80savz7gasgdzx9hc0xw0","added_by":"iaa1cdq70u5cpczvyt2py80savz7gasgdzx9hc0xw0"}\]/g' /Users/sherlock/.iris/config/genesis.json

sed -i '' 's/enable = false/enable = true/g' /Users/sherlock/.iris/config/app.toml
sed -i '' 's/swagger = false/swagger = true/g' /Users/sherlock/.iris/config/app.toml
sed -i '' 's/enabled-unsafe-cors = false/enabled-unsafe-cors = true/g' /Users/sherlock/.iris/config/app.toml
sed -i '' 's/127.0.0.1:26657/0.0.0.0:26657/g' /Users/sherlock/.iris/config/config.toml
sed -i '' 's/cors_allowed_origins = \[\]/cors_allowed_origins = \["*"\]/g' /Users/sherlock/.iris/config/config.toml

iris collect-gentxs
iris start


====
客户端
====
//需要提供客户端账户助记词
iris keys add x1 --recover
figure seminar caught foster midnight cup method west brown hundred regular symptom family accuse tourist game burst audit tell foot acquire spike chair danger
http://10.1.4.24:8081/



====
初始化
====
发行资产：
echo y| iris tx token issue --name=token-name --min-unit="ua01" --scale=6 --initial-supply=10000 --max-supply=30000 --mintable=true --from=v0 --chain-id=qa-test --fees=4iris -b block -y  --symbol=a01 |jq
iris query bank balances -o=json $(iris keys show v0 -a) |jq

iris tx bank send v0 $(iris keys show x1 -a) 1000a01 --fees=4iris --chain-id=qa-test -b block -y |jq
iris tx bank send v0 $(iris keys show x1 -a) 10000iris --fees=4iris --chain-id=qa-test -b block -y |jq
iris query bank balances -o=json $(iris keys show x1 -a) |jq


echo y| iris tx token issue --name=token-name --min-unit="ua02" --scale=6 --initial-supply=1000000 --max-supply=3000000 --mintable=true --from=v0 --chain-id=qa-test  -b block -y  --symbol=a02 |jq
iris tx bank send v0 $(iris keys show x1 -a) 1000a02  --chain-id=qa-test -b block -y |jq


====
查询
====
http://localhost:1317/coinswap/liquidities/uni:ua01
iris q tx D4FA1BD705AA3F0C4FA39AE161A9B1C6EA058D0BD395A8034A81B02DD7685A71



====
测试
====

-------
单次兑换 iris <--> token
-------
deposit ：100iris，100token
【 确定 output 模式 ，计算input 】
output（dt_y）：10token
input （dt_x）：11.145iris
dt_x = (1000*x*dt_y)/(997*(y-dt_y))
11.45iris = （1000 * 100iris * 10token ）/ （997 * （100token - 10token））


【 确定 input 模式 ，计算output 】
input （dt_y）：10iris
output（dt_x）：9.066itoken
dt_x = (997*dt_y*x)/(1000*y+997*dt_y)
9.066itoken = （997 * 10token * 100iris）/ （1000* 100token + 997*10token）



-------
二次兑换 token1 <--> token2
-------
【 确定 output 模式 ，计算input 】
output（dt_y）：10token2
input （dt_x）： ？？？token1  (12.58token1)

第一次兑换：计算出input的iris
【 确定 output 模式 ，计算input 】
output（dt_y）：10token2
input （dt_x）：11.144545iris
dt_x = (1000*x*dt_y)/(997*(y-dt_y))
11.144545iris = （1000 * 100iris * 10token ）/ （997 * （100token - 10token））


第一次兑换：计算出input的iris
【 确定 output 模式 ，计算input 】
output（dt_y）：11.45iris
input （dt_x）：12.58token1
dt_x = (1000*x*dt_y)/(997*(y-dt_y))
12.58token1 = （1000 * 100token1 * 11.144545iris ）/ （997 * （100iris - 11.144545iris））



----------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------
------  migrate  ----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------

1）export 旧版本的genesis（比如iris 用0.16）
//注意，v1.0的iris这里有bug 不能使用>/Users/sherlock/genesis.json 到文件
iris export --for-zero-height --home=/Users/sherlock/testnet/v0/iris  --output-file=/Users/sherlock/genesis.json

2）用新版本的iris（比如1.0） migrate 生成新的genesis
iris migrate /Users/sherlock/genesis.json --chain-id=qa-test > /Users/sherlock/genesis_new.json


3）新的iris init
rm -rf /Users/sherlock/.iris
iris init testing --chain-id=qa-test

4) 迁移validator， 分支切换到最新的git checkout vincent-migrate
旧的priv_validator（/Users/sherlock/testnet/v0/iris） 迁移到新的 （/Users/sherlock/.iris）
go run migrate/scripts/privValUpgrade.go /Users/sherlock/testnet/v0/iris/config/priv_validator.json /Users/sherlock/.iris/config/priv_validator_key.json /Users/sherlock/.iris/data/priv_validator_state.json

5) copy genesis
cp /Users/sherlock/genesis_new.json /Users/sherlock/.iris/config/genesis.json

6) 启动
iris unsafe-reset-all --home=/Users/sherlock/.iris
iris start --home=/Users/sherlock/.iris




==================================================================================================
==================================================================================================
======    wasm (WebAssembly) =====================================================================
==================================================================================================
==================================================================================================
https://gitlab.bianjie.ai/cschain/cschain-docs/blob/0da8435293f6d71c44fe325ec0aabf7ab35335f5/console/modules/wasm.md


---
1. 先要安装智能合约(参见irita)
---

---
2.  部署合约
---
# 上传合约
iris tx wasm store /Users/sherlock/my_workspace/wasm/election.wasm --from=v0 --chain-id=qa-test --fees=6iris -b block -y --gas="auto"

返回code id
{"key":"code_id","value":"1"}

# 查询
iris query wasm list-code


---
3. 实例化合约
---
CODE_ID=1
INIT='{"start":1,"end":10000,"candidates":["iaa1qvty8x0c78am8c44zv2n7tgm6gfqt78j0verqa","iaa1zk2tse0pkk87p2v8tcsfs0ytfw3t88kejecye5"]}'
注意：这里块数要大一点，不然后面调用容易超时

//实例化
带admin的：
iris tx wasm instantiate "$CODE_ID" "$INIT" --from=v0 --label="mint iris" --chain-id=qa-test --fees=6iris --gas="auto" -b block -y --admin=$(iris keys show v0 -a)


不带admin的（公用的）：
iris tx wasm instantiate "$CODE_ID" "$INIT" --from=v0 --label="mint iris" --chain-id=qa-test --fees=6iris --gas="auto" -b block -y

返回合约地址：（后面要用）
{"key":"contract_address","value":"iaa18vd8fpwxzck93qlwghaj6arh4p7c5n89fqcgm9"}

---
4. 执行合约
---
VOTE='{"vote":{"candidate":"iaa1qvty8x0c78am8c44zv2n7tgm6gfqt78j0verqa"}}'
iris tx wasm execute iaa18vd8fpwxzck93qlwghaj6arh4p7c5n89fqcgm9 "$VOTE" --from=v0 --chain-id=qa-test --fees=6iris --gas="auto" -b block -y


---
5. 迁移（Migrate）【注意：这块代码没有完成】
---
将智能合约迁移到新的代码版本
iris tx wasm migrate [contract_addr_bech32] [new_code_id_int64] [json_encoded_migration_args] [flags]



---
6. 变更、清除智能合约的管理人
---
#  变更智能合约的管理人（以便对合约执行migrate操作，必须由上个管理员指定。初始化的时候必须是带admin的）
iris tx wasm set-contract-admin iaa18vd8fpwxzck93qlwghaj6arh4p7c5n89fqcgm9 $(iris keys show v1 -a) --from=v0  --chain-id=qa-test --fees=4iris --gas="auto" -b block -y

查询：(admin字段修改了)
iris query wasm list-contract-by-code 1


#  清空合约管理人权限（清空后不能恢复）
iris tx wasm clear-contract-admin iaa18vd8fpwxzck93qlwghaj6arh4p7c5n89fqcgm9 --from=v1 --chain-id=qa-test --fees=4iris --gas="auto" -b block -y -b block -y

查询：(admin字段没有了)
iris query wasm list-contract-by-code 1

//先转账一笔给v1
iris tx bank send v0 $(iris keys show v1 -a) 100000iris --fees=4iris --chain-id=qa-test -b block -y |jq



---
7. 查询
---
#  下载智能合约
iris query wasm code 1 /Users/sherlock/election.wasm

#  查询合约信息 （后面是合约地址，初始化的时候会返回）
iris query wasm contract iaa18vd8fpwxzck93qlwghaj6arh4p7c5n89fqcgm9

#  查询migrate历史信息 （这个暂时还不能测，migrate本身未实现 ）
iris query wasm contract-history iaa18vd8fpwxzck93qlwghaj6arh4p7c5n89fqcgm9

#  查询链上所有的合约code_id示例
iris query wasm list-code

#  使用code_id查询合约信息 （这个比list-code更详细）
iris query wasm list-contract-by-code 1

#  查询合约所有状态 （all）
iris query wasm contract-state all iaa18vd8fpwxzck93qlwghaj6arh4p7c5n89fqcgm9

- key: 0006636F6E666967
  value: eyJzdGFydCI6MSwiZW5kIjoxMDAwMCwiY2FuZGlkYXRlcyI6WyJpYWExcXZ0eTh4MGM3OGFtOGM0NHp2Mm43dGdtNmdmcXQ3OGowdmVycWEiLCJpYWExemsydHNlMHBrazg3cDJ2OHRjc2ZzMHl0ZnczdDg4a2VqZWN5ZTUiXSwidm90ZXMiOlt7InZvdGVyIjoiaWFhMW11ZnJrdHU5dGM0NXBlbmN2cnh3d2UwcHdmM2t2cGhyZmRtdDgwIiwiY2FuZGlkYXRlIjoiaWFhMXF2dHk4eDBjNzhhbThjNDR6djJuN3RnbTZnZnF0NzhqMHZlcnFhIn1dfQ==

注：**key的编码为hex编码，例如0006636F6E666967对应字符串为config，value编码为base64编码
对应字符串
{"start":1,"end":100,"candidates":["iaa1qvty8x0c78am8c44zv2n7tgm6gfqt78j0verqa","iaa1zk2tse0pkk87p2v8tcsfs0ytfw3t88kejecye5"],"votes":[{"voter":"iaa1rgnu8grzt6mwnjg7jss7w0sfyjn67g4et0hzfz","candidate":"iaa1qvty8x0c78am8c44zv2n7tgm6gfqt78j0verqa"}]}


#  根据用户指定的合约地址以及合约编写时指定的key，查询当前合约的状态信息（raw）
iris query wasm contract-state raw iaa18vd8fpwxzck93qlwghaj6arh4p7c5n89fqcgm9 0006636F6E666967

data: eyJzdGFydCI6MSwiZW5kIjoxMDAwMCwiY2FuZGlkYXRlcyI6WyJpYWExcXZ0eTh4MGM3OGFtOGM0NHp2Mm43dGdtNmdmcXQ3OGowdmVycWEiLCJpYWExemsydHNlMHBrazg3cDJ2OHRjc2ZzMHl0ZnczdDg4a2VqZWN5ZTUiXSwidm90ZXMiOlt7InZvdGVyIjoiaWFhMW11ZnJrdHU5dGM0NXBlbmN2cnh3d2UwcHdmM2t2cGhyZmRtdDgwIiwiY2FuZGlkYXRlIjoiaWFhMXF2dHk4eDBjNzhhbThjNDR6djJuN3RnbTZnZnF0NzhqMHZlcnFhIn1dfQ==

**注：data解码格式为base64。


#  调用合约指定的查询方法
Query='{"get_vote_info":{}}'
iris query wasm contract-state smart iaa18vd8fpwxzck93qlwghaj6arh4p7c5n89fqcgm9 $Query

